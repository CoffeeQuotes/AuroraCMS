<?php abstract class elFinderVolumeDriver{public$netMountKey='';protected$ARGS=array();protected$driverId='a';protected$id='';protected$mounted=false;protected$root='';protected$rootName='';protected$startPath='';protected$URL='';protected$tmp;protected$tmpLinkPath='';protected$tmpLinkUrl='';protected$tmbPath='';protected$tmbPathWritable=false;protected$tmbURL='';protected$tmbSize=48;protected$imgLib='auto';protected$imgConverter=array();protected$cryptLib='';protected$archivers=array('create'=>array(),'extract'=>array());protected static$maxArcFilesSize;protected$encoding=null;protected$treeDeep=1;protected$error=array();protected$today=0;protected$yesterday=0;protected$extractToNewdir='auto';protected$options=array('driverId'=>'','id'=>'','rootRev'=>'','type'=>'','path'=>'','phash'=>'','trashHash'=>'','startPath'=>'','treeDeep'=>1,'URL'=>'','onetimeUrl'=>'auto','dirUrlOwn'=>'auto','separator'=>DIRECTORY_SEPARATOR,'winHashFix'=>false,'encoding'=>'','locale'=>'','icon'=>'','rootCssClass'=>'','noSessionCache'=>array(),'i18nFolderName'=>false,'searchTimeout'=>30,'searchExDirReg'=>'','cryptLib'=>'','mimeDetect'=>'auto','mimefile'=>'','staticMineMap'=>array('php:*'=>'text/x-php','pht:*'=>'text/x-php','php3:*'=>'text/x-php','php4:*'=>'text/x-php','php5:*'=>'text/x-php','php7:*'=>'text/x-php','phtml:*'=>'text/x-php','cgi:*'=>'text/x-httpd-cgi','pl:*'=>'text/x-perl','asp:*'=>'text/x-asap','aspx:*'=>'text/x-asap','py:*'=>'text/x-python','rb:*'=>'text/x-ruby','jsp:*'=>'text/x-jsp'),'mimeMap'=>array('md:application/x-genesis-rom'=>'text/x-markdown','md:text/plain'=>'text/x-markdown','markdown:text/plain'=>'text/x-markdown','css:text/x-asm'=>'text/css','css:text/plain'=>'text/css','csv:text/plain'=>'text/csv','java:text/x-c'=>'text/x-java-source','json:text/plain'=>'application/json','sql:text/plain'=>'text/x-sql','rtf:text/rtf'=>'application/rtf','rtfd:text/rtfd'=>'application/rtfd','ico:image/vnd.microsoft.icon'=>'image/x-icon','svg:text/plain'=>'image/svg+xml','pxd:application/octet-stream'=>'image/x-pixlr-data','dng:image/tiff'=>'image/x-adobe-dng','sketch:application/zip'=>'image/x-sketch','sketch:application/octet-stream'=>'image/x-sketch','xcf:application/octet-stream'=>'image/x-xcf','amr:application/octet-stream'=>'audio/amr','m4a:video/mp4'=>'audio/mp4','oga:application/ogg'=>'audio/ogg','ogv:application/ogg'=>'video/ogg','zip:application/x-zip'=>'application/zip','m3u8:text/plain'=>'application/x-mpegURL','mpd:text/plain'=>'application/dash+xml','mpd:application/xml'=>'application/dash+xml','*:application/x-dosexec'=>'application/x-executable','doc:application/vnd.ms-office'=>'application/msword','xls:application/vnd.ms-office'=>'application/vnd.ms-excel','ppt:application/vnd.ms-office'=>'application/vnd.ms-powerpoint','yml:text/plain'=>'text/x-yaml','ai:application/pdf'=>'application/postscript','cgm:text/plain'=>'image/cgm','dxf:text/plain'=>'image/vnd.dxf','dds:application/octet-stream'=>'image/vnd-ms.dds','hpgl:text/plain'=>'application/vnd.hp-hpgl','igs:text/plain'=>'model/iges','iges:text/plain'=>'model/iges','plt:application/octet-stream'=>'application/plt','plt:text/plain'=>'application/plt','sat:text/plain'=>'application/sat','step:text/plain'=>'application/step','stp:text/plain'=>'application/step'),'additionalMimeMap'=>array(),'mimeTypeUnknown'=>'application/octet-stream','dispInlineRegex'=>'^(?:(?:video|audio)|image/(?!.+\+xml)|application/(?:ogg|x-mpegURL|dash\+xml)|(?:text/plain|application/pdf)$)','tmpLinkPath'=>'','tmpLinkUrl'=>'','tmbPath'=>'.tmb','tmbPathMode'=>0777,'tmbURL'=>'','tmbSize'=>48,'tmbCrop'=>true,'tmbReqCustomData'=>false,'tmbBgColor'=>'transparent','bgColorFb'=>'#ffffff','imgLib'=>'auto','tmbFbSelf'=>true,'imgConverter'=>array(),'tmbVideoConvLen'=>10000000,'tmbVideoConvSec'=>6,'tmbGcMaxlifeHour'=>0,'tmbGcPercentage'=>1,'resourcePath'=>'','jpgQuality'=>100,'jpgProgressive'=>true,'substituteImg'=>true,'copyOverwrite'=>true,'copyJoin'=>true,'uploadOverwrite'=>true,'uploadAllow'=>array(),'uploadDeny'=>array(),'uploadOrder'=>array('deny','allow'),'uploadMaxSize'=>0,'uploadMaxConn'=>3,'getMaxSize'=>0,'dateFormat'=>'j M Y H:i','timeFormat'=>'H:i','checkSubfolders'=>true,'copyFrom'=>true,'copyTo'=>true,'duplicateSuffix'=>' %s ','uniqueNumFormat'=>'%d','disabled'=>array(),'statOwner'=>false,'allowChmodReadOnly'=>false,'acceptedName'=>'/^[^\.].*/','acceptedDirname'=>'','accessControl'=>null,'accessControlData'=>null,'rapidRootStat'=>array('read'=>true,'write'=>true,'locked'=>false,'hidden'=>false,'size'=>0,'ts'=>0,'dirs'=>-1,'mime'=>'directory'),'defaults'=>array('read'=>true,'write'=>true,'locked'=>false,'hidden'=>false),'attributes'=>array(),'maxArcFilesSize'=>'2G','archiveMimes'=>array(),'archivers'=>array(),'useRemoteArchive'=>false,'plugin'=>array(),'syncChkAsTs'=>null,'syncCheckFunc'=>null,'plStandby'=>30,'tsPlSleep'=>10,'lsPlSleep'=>30,'syncMinMs'=>null,'utf8fix'=>false,'utf8patterns'=>array("\u0438\u0306","\u0435\u0308","\u0418\u0306","\u0415\u0308","\u00d8A","\u030a"),'utf8replace'=>array("\u0439","\u0451","\u0419","\u0401","\u00d8","\u00c5"),'cacheHeaders'=>array('Cache-Control:max-age=3600','Expires:','Pragma:'),'xsendfile'=>'','xsendfilePath'=>'');protected$defaults=array('read'=>true,'write'=>true,'locked'=>false,'hidden'=>false);protected$attributes=array();protected$access=null;protected$uploadAllow=array();protected$uploadDeny=array();protected$uploadOrder=array();protected$uploadMaxSize=0;protected$uploadOverwrite=true;protected$getMaxSize=-1;protected$mimeDetect='auto';private static$mimetypesLoaded=false;protected$finfo=null;protected$disabled=array();protected static$mimetypes=array('exe'=>'application/x-executable','jar'=>'application/x-jar','gz'=>'application/x-gzip','tgz'=>'application/x-gzip','tbz'=>'application/x-bzip2','rar'=>'application/x-rar','php'=>'text/x-php','js'=>'text/javascript','rtfd'=>'application/rtfd','py'=>'text/x-python','rb'=>'text/x-ruby','sh'=>'text/x-shellscript','pl'=>'text/x-perl','xml'=>'text/xml','c'=>'text/x-csrc','h'=>'text/x-chdr','cpp'=>'text/x-c++src','hh'=>'text/x-c++hdr','md'=>'text/x-markdown','markdown'=>'text/x-markdown','yml'=>'text/x-yaml','bmp'=>'image/x-ms-bmp','tga'=>'image/x-targa','xbm'=>'image/xbm','pxm'=>'image/pxm','wav'=>'audio/wav','dv'=>'video/x-dv','wm'=>'video/x-ms-wmv','ogm'=>'video/ogg','m2ts'=>'video/MP2T','mts'=>'video/MP2T','ts'=>'video/MP2T','m3u8'=>'application/x-mpegURL','mpd'=>'application/dash+xml');protected$separator=DIRECTORY_SEPARATOR;protected$separatorForHash='';protected$systemRoot=DIRECTORY_SEPARATOR;protected$onlyMimes=array();protected$removed=array();protected$added=array();protected$cache=array();protected$dirsCache=array();protected$subdirsCache=array();protected$sessionCache;protected$sessionCaching=array('rootstat'=>true,'subdirs'=>true);protected$session;protected$searchStart;protected$doSearchCurrentQuery=array();protected$rootModified=false;protected$disabledGetUrl=false;protected$nameValidator;protected$dirnameValidator;protected$needOnline;public function setNeedOnline($state=null){if($state!==null){$this->needOnline=(bool)$state;return;}$need=false;$arg=$this->ARGS;$id=$this->id;$target=!empty($arg['target'])?$arg['target']:(!empty($arg['dst'])?$arg['dst']:'');$targets=!empty($arg['targets'])?$arg['targets']:array();if(!is_array($targets)){$targets=array($targets);}if($target&&strpos($target,$id)===0){$need=true;}elseif($targets){foreach($targets as$t){if($t&&strpos($t,$id)===0){$need=true;break;}}}$this->needOnline=$need;}protected function init(){return true;}protected function configure(){$path=$this->options['tmbPath'];if($path){if(!file_exists($path)){if(mkdir($path)){chmod($path,$this->options['tmbPathMode']);}else{$path='';}}if(is_dir($path)&&is_readable($path)){$this->tmbPath=$path;$this->tmbPathWritable=is_writable($path);}}if(!is_dir($this->options['resourcePath'])){$this->options['resourcePath']=dirname(__FILE__).DIRECTORY_SEPARATOR.'resources';}$type=preg_match('/^(imagick|gd|convert|auto|none)$/i',$this->options['imgLib'])?strtolower($this->options['imgLib']):'auto';if($type==='none'){$this->imgLib='';}else{if(($type==='imagick'||$type==='auto')&&extension_loaded('imagick')){$this->imgLib='imagick';}elseif(($type==='gd'||$type==='auto')&&function_exists('gd_info')){$this->imgLib='gd';}else{$convertCache='imgLibConvert';if(($convertCmd=$this->session->get($convertCache,false))!==false){$this->imgLib=$convertCmd;}else{$this->imgLib=($this->procExec(ELFINDER_CONVERT_PATH.' -version')===0)?'convert':'';$this->session->set($convertCache,$this->imgLib);}}if($type!=='auto'&&$this->imgLib===''){$this->imgLib=extension_loaded('imagick')?'imagick':(function_exists('gd_info')?'gd':'');}}if(!empty($this->options['imgConverter'])&&is_array($this->options['imgConverter'])){foreach($this->options['imgConverter']as$_type=>$_converter){if(isset($_converter['func'])){$this->imgConverter[strtolower($_type)]=$_converter;}}}if(!isset($this->imgConverter['video'])){$videoLibCache='videoLib';if(($videoLibCmd=$this->session->get($videoLibCache,false))===false){$videoLibCmd=($this->procExec(ELFINDER_FFMPEG_PATH.' -version')===0)?'ffmpeg':'';$this->session->set($videoLibCache,$videoLibCmd);}if($videoLibCmd){$this->imgConverter['video']=array('func'=>array($this,$videoLibCmd.'ToImg'),'maxlen'=>$this->options['tmbVideoConvLen']);}}if(strtolower($this->options['onetimeUrl'])==='auto'){$this->options['onetimeUrl']=elFinder::getStaticVar('commonTempPath')?true:false;}if(empty($this->archivers['create'])){$this->disabled[]='archive';}if(empty($this->archivers['extract'])){$this->disabled[]='extract';}$_arc=$this->getArchivers();if(empty($_arc['create'])){$this->disabled[]='zipdl';}if($this->options['maxArcFilesSize']){$this->options['maxArcFilesSize']=elFinder::getIniBytes('',$this->options['maxArcFilesSize']);}self::$maxArcFilesSize=$this->options['maxArcFilesSize'];if(empty($this->options['statOwner'])){$this->disabled[]='chmod';}if(!is_array($this->options['mimeMap'])){$this->options['mimeMap']=array();}if(is_array($this->options['staticMineMap'])&&$this->options['staticMineMap']){$this->options['mimeMap']=array_merge($this->options['mimeMap'],$this->options['staticMineMap']);}if(is_array($this->options['additionalMimeMap'])&&$this->options['additionalMimeMap']){$this->options['mimeMap']=array_merge($this->options['mimeMap'],$this->options['additionalMimeMap']);}if(in_array('url',$this->disabled)){$this->disabledGetUrl=true;}$this->uploadOverwrite=$this->options['uploadOverwrite'];}protected function sessionRestart(){$this->sessionCache=$this->session->start()->get($this->id,array());return true;}public function driverId(){return$this->driverId;}public function id(){return $this->id;}public function setSession($session){$this->session=$session;}public function getSession(){return$this->session;}public function saveSessionCache(){$this->session->set($this->id,$this->sessionCache);}public function debug(){return array('id'=>$this->id(),'name'=>strtolower(substr(get_class($this),strlen('elfinderdriver'))),'mimeDetect'=>$this->mimeDetect,'imgLib'=>$this->imgLib);}public function chmod($hash,$mode){if($this->commandDisabled('chmod')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(!($file=$this->file($hash))){return$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}if(!$this->options['allowChmodReadOnly']){if(!$this->attr($this->decode($hash),'write',null,($file['mime']==='directory'))){return$this->setError(elFinder::ERROR_PERM_DENIED,$file['name']);}}$path=$this->decode($hash);$write=$file['write'];if($this->convEncOut(!$this->_chmod($this->convEncIn($path),$mode))){return$this->setError(elFinder::ERROR_PERM_DENIED,$file['name']);}$this->clearstatcache();if($path==$this->root){$this->rootModified=true;}if($file=$this->stat($path)){$files=array($file);if($file['mime']==='directory'&&$write!==$file['write']){foreach($this->getScandir($path)as $stat){if($this->mimeAccepted($stat['mime'])){$files[]=$stat;}}}return $files;}else{return$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}}public function fstat($hash){$path=$this->decode($hash);return$this->stat($path);}public function clearstatcache(){clearstatcache();$this->clearcache();}public function clearcaches($hash=null){if($hash===null){$this->clearcache();}else{$path=$this->decode($hash);unset($this->cache[$path],$this->dirsCache[$path]);}}public function mount(array$opts){$this->options=array_merge($this->options,$opts);if(!isset($this->options['path'])||$this->options['path']===''){return$this->setError('Path undefined.');}if(!$this->session){return$this->setError('Session wrapper dose not set. Need to `$volume->setSession(elFinderSessionInterface);` before mount.');}if(!($this->session instanceof elFinderSessionInterface)){return $this->setError('Session wrapper instance must be "elFinderSessionInterface".');}if(!empty($this->options['driverId'])){$this->driverId=$this->options['driverId'];}$this->id=$this->driverId.(!empty($this->options['id'])?$this->options['id']:elFinder::$volumesCnt++).'_';$this->root=$this->normpathCE($this->options['path']);$this->separator=isset($this->options['separator'])?$this->options['separator']:DIRECTORY_SEPARATOR;if(!empty($this->options['winHashFix'])){$this->separatorForHash=($this->separator!=='/')?'/':'';}$this->systemRoot=isset($this->options['systemRoot'])?$this->options['systemRoot']:$this->separator;$this->ARGS=$_SERVER['REQUEST_METHOD']==='POST'?$_POST:$_GET;$argInit=!empty($this->ARGS['init']);if(!is_bool($this->needOnline)){$this->setNeedOnline();}if($argInit){$this->session->set($this->id,array());}$this->sessionCache=$this->session->get($this->id,array());$this->defaults=array('read'=>isset($this->options['defaults']['read'])?!!$this->options['defaults']['read']:true,'write'=>isset($this->options['defaults']['write'])?!!$this->options['defaults']['write']:true,'locked'=>isset($this->options['defaults']['locked'])?!!$this->options['defaults']['locked']:false,'hidden'=>isset($this->options['defaults']['hidden'])?!!$this->options['defaults']['hidden']:false);$this->attributes[]=array('pattern'=>'~^'.preg_quote($this->separator).'$~','locked'=>true,'hidden'=>false);if(!empty($this->options['attributes'])&&is_array($this->options['attributes'])){foreach($this->options['attributes']as$a){if(!empty($a['pattern'])||(is_array($a)&&count($a)>1)){$this->attributes[]=$a;}}}if(!empty($this->options['accessControl'])&&is_callable($this->options['accessControl'])){$this->access=$this->options['accessControl'];}$this->today=mktime(0,0,0,date('m'),date('d'),date('Y'));$this->yesterday=$this->today-86400;if(!$this->init()){return false;}if(!empty($this->options['encoding'])&&strtoupper($this->options['encoding'])!=='UTF-8'){$this->encoding=$this->options['encoding'];}else{$this->encoding=null;}$this->uploadAllow=isset($this->options['uploadAllow'])&&is_array($this->options['uploadAllow'])?$this->options['uploadAllow']:array();$this->uploadDeny=isset($this->options['uploadDeny'])&&is_array($this->options['uploadDeny'])?$this->options['uploadDeny']:array();$this->options['uiCmdMap']=(isset($this->options['uiCmdMap'])&&is_array($this->options['uiCmdMap']))?$this->options['uiCmdMap']:array();if(is_string($this->options['uploadOrder'])){$parts=explode(',',isset($this->options['uploadOrder'])?$this->options['uploadOrder']:'deny,allow');$this->uploadOrder=array(trim($parts[0]),trim($parts[1]));}else{$this->uploadOrder=!empty($this->options['uploadOrder'])?$this->options['uploadOrder']:array('deny','allow');}if(!empty($this->options['uploadMaxSize'])){$this->uploadMaxSize=elFinder::getIniBytes('',$this->options['uploadMaxSize']);}if(!defined('PHP_INT_MAX')){define('PHP_INT_MAX',2147483647);}if($this->uploadMaxSize<1||$this->uploadMaxSize>PHP_INT_MAX){$this->uploadMaxSize=PHP_INT_MAX;}$memLimit=elFinder::getIniBytes('memory_limit')/2;if($memLimit>0){$this->getMaxSize=empty($this->options['getMaxSize'])?$memLimit:min($memLimit,elFinder::getIniBytes('',$this->options['getMaxSize']));}else{$this->getMaxSize=-1;}$this->disabled=isset($this->options['disabled'])&&is_array($this->options['disabled'])?array_values(array_diff($this->options['disabled'],array('open'))):array();$this->cryptLib=$this->options['cryptLib'];$this->mimeDetect=$this->options['mimeDetect'];$type=strtolower($this->options['mimeDetect']);$type=preg_match('/^(finfo|mime_content_type|internal|auto)$/i',$type)?$type:'auto';$regexp='/text\/x\-(php|c\+\+)/';if(($type=='finfo'||$type=='auto')&&class_exists('finfo',false)){$tmpFileInfo=explode(';',finfo_file(finfo_open(FILEINFO_MIME),__FILE__));}else{$tmpFileInfo=false;}$type='internal';if($tmpFileInfo&&preg_match($regexp,array_shift($tmpFileInfo))){$type='finfo';$this->finfo=finfo_open(FILEINFO_MIME);}elseif(($type=='mime_content_type'||$type=='auto')&&function_exists('mime_content_type')){$_mimetypes=explode(';',mime_content_type(__FILE__));if(preg_match($regexp,array_shift($_mimetypes))){$type='mime_content_type';}}$this->mimeDetect=$type;if($this->mimeDetect==='internal'&&!elFinderVolumeDriver::$mimetypesLoaded){elFinderVolumeDriver::loadMimeTypes(!empty($this->options['mimefile'])?$this->options['mimefile']:'');}$this->rootName=empty($this->options['alias'])?$this->basenameCE($this->root):$this->options['alias'];if($this->rootName==='')$this->rootName=$this->separator;$this->_checkArchivers();$root=$this->stat($this->root);if(!$root){return$this->setError('Root folder does not exist.');}if(!$root['read']&&!$root['write']){return $this->setError('Root folder has not read and write permissions.');}if($root['read']){if($argInit){$startPath=$this->options['startPath']?$this->normpathCE($this->options['startPath']):'';if($startPath){$start=$this->stat($startPath);if(!empty($start)&&$start['mime']=='directory'&&$start['read']&&empty($start['hidden'])&&$this->inpathCE($startPath,$this->root)){$this->startPath=$startPath;if(substr($this->startPath,-1,1)==$this->options['separator']){$this->startPath=substr($this->startPath,0,-1);}}}}}else{$this->options['URL']='';$this->options['tmbURL']='';$this->options['tmbPath']='';array_unshift($this->attributes,array('pattern'=>'/.*/','read'=>false));}$this->treeDeep=$this->options['treeDeep']>0?(int)$this->options['treeDeep']:1;$this->tmbSize=$this->options['tmbSize']>0?(int)$this->options['tmbSize']:48;$this->URL=$this->options['URL'];if($this->URL&&preg_match("|[^/?&=]$|",$this->URL)){$this->URL.='/';}$dirUrlOwn=strtolower($this->options['dirUrlOwn']);if($dirUrlOwn==='auto'){$this->options['dirUrlOwn']=$this->URL?false:true;}else if($dirUrlOwn==='hide'){$this->options['dirUrlOwn']='hide';}else{$this->options['dirUrlOwn']=(bool)$this->options['dirUrlOwn'];}$this->tmbURL=!empty($this->options['tmbURL'])?$this->options['tmbURL']:'';if($this->tmbURL&&$this->tmbURL!=='self'&&preg_match("|[^/?&=]$|",$this->tmbURL)){$this->tmbURL.='/';}$this->nameValidator=!empty($this->options['acceptedName'])&&(is_string($this->options['acceptedName'])||is_callable($this->options['acceptedName']))?$this->options['acceptedName']:'';$this->dirnameValidator=!empty($this->options['acceptedDirname'])&&(is_callable($this->options['acceptedDirname'])||(is_string($this->options['acceptedDirname'])&&preg_match($this->options['acceptedDirname'],'')!==false))?$this->options['acceptedDirname']:$this->nameValidator;if($this->options['useRemoteArchive']&&empty($this->archivers['create'])&&$this->getTempPath()){$_archivers=$this->getArchivers();$this->archivers['create']=$_archivers['create'];}if(!empty($this->options['archiveMimes'])&&is_array($this->options['archiveMimes'])){foreach($this->archivers['create']as$mime=>$v){if(!in_array($mime,$this->options['archiveMimes'])){unset($this->archivers['create'][$mime]);}}}if(!empty($this->options['archivers']['create'])&&is_array($this->options['archivers']['create'])){foreach($this->options['archivers']['create']as $mime=>$conf){if(strpos($mime,'application/')===0&&!empty($conf['cmd'])&&isset($conf['argc'])&&!empty($conf['ext'])&&!isset($this->archivers['create'][$mime])){$this->archivers['create'][$mime]=$conf;}}}if(!empty($this->options['archivers']['extract'])&&is_array($this->options['archivers']['extract'])){foreach($this->options['archivers']['extract']as$mime=>$conf){if(strpos($mime,'application/')===0&&!empty($conf['cmd'])&&isset($conf['argc'])&&!empty($conf['ext'])&&!isset($this->archivers['extract'][$mime])){$this->archivers['extract'][$mime]=$conf;}}}if(!empty($this->options['noSessionCache'])&&is_array($this->options['noSessionCache'])){foreach($this->options['noSessionCache']as$_key){$this->sessionCaching[$_key]=false;unset($this->sessionCache[$_key]);}}if($this->sessionCaching['subdirs']){if(!isset($this->sessionCache['subdirs'])){$this->sessionCache['subdirs']=array();}}$this->configure();$this->disabled=array_values(array_unique($this->disabled));if($this->options['syncMinMs']!==0){$this->options['syncMinMs']=max($this->options[$this->options['syncChkAsTs']?'tsPlSleep':'lsPlSleep']*1000,intval($this->options['syncMinMs']));}if($this->options['trashHash']&&empty($this->options['copyJoin'])){$this->options['trashHash']='';}if(elFinder::$tmpLinkPath&&!$this->options['tmpLinkPath']){if(is_writeable(elFinder::$tmpLinkPath)){$this->options['tmpLinkPath']=elFinder::$tmpLinkPath;}else{elFinder::$tmpLinkPath='';}}if($this->options['tmpLinkPath']&&is_writable($this->options['tmpLinkPath'])){$this->tmpLinkPath=realpath($this->options['tmpLinkPath']);}else if(!$this->tmpLinkPath&&$this->tmbURL&&$this->tmbPath){$this->tmpLinkPath=$this->tmbPath;$this->options['tmpLinkUrl']=$this->tmbURL;}elseif(!$this->options['URL']&&is_writable('../files/.tmb')){$this->tmpLinkPath=realpath('../files/.tmb');$this->options['tmpLinkUrl']='';if(!elFinder::$tmpLinkPath){elFinder::$tmpLinkPath=$this->tmpLinkPath;elFinder::$tmpLinkUrl='';}}if(elFinder::$tmpLinkUrl&&!$this->options['tmpLinkUrl']){$this->options['tmpLinkUrl']=elFinder::$tmpLinkUrl;}if($this->options['tmpLinkUrl']){$this->tmpLinkUrl=$this->options['tmpLinkUrl'];}if($this->tmpLinkPath&&!$this->tmpLinkUrl){$cur=realpath('./');$i=0;while($cur!==$this->systemRoot&&strpos($this->tmpLinkPath,$cur)!==0){$i++;$cur=dirname($cur);}list($req)=explode('?',$_SERVER['REQUEST_URI']);$reqs=explode('/',dirname($req));$uri=join('/',array_slice($reqs,0,count($reqs)-1)).substr($this->tmpLinkPath,strlen($cur));$https=(isset($_SERVER['HTTPS'])&&strtolower($_SERVER['HTTPS'])!=='off');$this->tmpLinkUrl=($https?'https://':'http://').$_SERVER['SERVER_NAME'].(((!$https&&$_SERVER['SERVER_PORT']==80)||($https&&$_SERVER['SERVER_PORT']==443))?'':(':'.$_SERVER['SERVER_PORT'])).$uri;if(!elFinder::$tmpLinkUrl){elFinder::$tmpLinkUrl=$this->tmpLinkUrl;}}if($this->tmpLinkPath){$this->tmpLinkPath=rtrim($this->tmpLinkPath,'/');}if($this->tmpLinkUrl){$this->tmpLinkUrl=rtrim($this->tmpLinkUrl,'/');}$this->updateCache($this->root,$root);return$this->mounted=true;}public function umount(){}public function clearSessionCache(){$this->sessionCache=array();}public function error(){return$this->error;}public function isUploadableByName($name,$allowUnknown=false){$mimeByName=$this->mimetype($name,true);return(($allowUnknown&&$mimeByName==='unknown')||$this->allowPutMime($mimeByName));}public function getMimeTable(){if(!elFinderVolumeDriver::$mimetypesLoaded){elFinderVolumeDriver::loadMimeTypes();}return elFinderVolumeDriver::$mimetypes;}public function getExtentionByMime($mime,$suffix=''){static$extTable=null;if(is_null($extTable)){$extTable=array_flip(array_unique($this->getMimeTable()));foreach($this->options['mimeMap']as$pair=>$_mime){list($ext)=explode(':',$pair);if($ext!=='*'&&!isset($extTable[$_mime])){$extTable[$_mime]=$ext;}}}if($mime&&isset($extTable[$mime])){return $suffix?($extTable[$mime].$suffix):$extTable[$mime];}return'';}public function setMimesFilter($mimes){if(is_array($mimes)){$this->onlyMimes=$mimes;}}public function root(){return $this->encode($this->root);}public function getRootPath(){return $this->root;}public function getHash($path,$name=''){if($name!==''){$path=$this->joinPathCE($path,$name);}return$this->encode($path);}public function getPath($hash){return $this->decode($hash);}public function defaultPath(){return$this->encode($this->startPath?$this->startPath:$this->root);}public function options($hash){$create=$createext=array();if(isset($this->archivers['create'])&&is_array($this->archivers['create'])){foreach($this->archivers['create']as$m=>$v){$create[]=$m;$createext[$m]=$v['ext'];}}$opts=array('path'=>$hash?$this->path($hash):'','url'=>$this->URL,'tmbUrl'=>(!$this->imgLib&&$this->options['tmbFbSelf'])?'self':$this->tmbURL,'disabled'=>$this->disabled,'separator'=>$this->separator,'copyOverwrite'=>intval($this->options['copyOverwrite']),'uploadOverwrite'=>intval($this->options['uploadOverwrite']),'uploadMaxSize'=>intval($this->uploadMaxSize),'uploadMaxConn'=>intval($this->options['uploadMaxConn']),'uploadMime'=>array('firstOrder'=>isset($this->uploadOrder[0])?$this->uploadOrder[0]:'deny','allow'=>$this->uploadAllow,'deny'=>$this->uploadDeny),'dispInlineRegex'=>$this->options['dispInlineRegex'],'jpgQuality'=>intval($this->options['jpgQuality']),'archivers'=>array('create'=>$create,'extract'=>isset($this->archivers['extract'])&&is_array($this->archivers['extract'])?array_keys($this->archivers['extract']):array(),'createext'=>$createext),'uiCmdMap'=>(isset($this->options['uiCmdMap'])&&is_array($this->options['uiCmdMap']))?$this->options['uiCmdMap']:array(),'syncChkAsTs'=>intval($this->options['syncChkAsTs']),'syncMinMs'=>intval($this->options['syncMinMs']),'i18nFolderName'=>intval($this->options['i18nFolderName']),'tmbCrop'=>intval($this->options['tmbCrop']),'tmbReqCustomData'=>(bool)$this->options['tmbReqCustomData'],'substituteImg'=>(bool)$this->options['substituteImg'],'onetimeUrl'=>(bool)$this->options['onetimeUrl'],);if(!empty($this->options['trashHash'])){$opts['trashHash']=$this->options['trashHash'];}if($hash===null){if(!empty($this->options['icon'])){$opts['icon']=$this->options['icon'];}if(!empty($this->options['rootCssClass'])){$opts['csscls']=$this->options['rootCssClass'];}if(isset($this->options['netkey'])){$opts['netkey']=$this->options['netkey'];}}return$opts;}public function getOption($name){return isset($this->options[$name])?$this->options[$name]:null;}public function getOptionsPlugin($name=''){if($name){return isset($this->options['plugin'][$name])?$this->options['plugin'][$name]:array();}else{return $this->options['plugin'];}}public function commandDisabled($cmd){return in_array($cmd,$this->disabled);}public function mimeAccepted($mime,$mimes=null,$empty=true){$mimes=is_array($mimes)?$mimes:$this->onlyMimes;if(empty($mimes)){return$empty;}return $mime=='directory'||in_array('all',$mimes)||in_array('All',$mimes)||in_array($mime,$mimes)||in_array(substr($mime,0,strpos($mime,'/')),$mimes);}public function isReadable(){$stat=$this->stat($this->root);return $stat['read'];}public function copyFromAllowed(){return!!$this->options['copyFrom'];}public function path($hash){return$this->convEncOut($this->_path($this->convEncIn($this->decode($hash))));}public function realpath($hash){$path=$this->decode($hash);return$this->stat($path)?$path:false;}public function removed(){if($this->removed){$unsetSubdir=isset($this->sessionCache['subdirs'])?true:false;foreach($this->removed as$item){if($item['mime']==='directory'){$path=$this->decode($item['hash']);if($unsetSubdir){unset($this->sessionCache['subdirs'][$path]);}if($item['phash']!==''){$parent=$this->decode($item['phash']);unset($this->cache[$parent]);if($this->root===$parent){$this->sessionCache['rootstat']=array();}if($unsetSubdir){unset($this->sessionCache['subdirs'][$parent]);}}}}$this->removed=array_values($this->removed);}return$this->removed;}public function added(){return$this->added;}public function resetRemoved(){$this->resetResultStat();}public function resetResultStat(){$this->removed=array();$this->added=array();}public function closest($hash,$attr,$val){return($path=$this->closestByAttr($this->decode($hash),$attr,$val))?$this->encode($path):false;}public function file($hash){$file=$this->stat($this->decode($hash));return($file)?$file:$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}public function dir($hash,$resolveLink=false){if(($dir=$this->file($hash))==false){return $this->setError(elFinder::ERROR_DIR_NOT_FOUND);}if($resolveLink&&!empty($dir['thash'])){$dir=$this->file($dir['thash']);}return $dir&&$dir['mime']=='directory'&&empty($dir['hidden'])?$dir:$this->setError(elFinder::ERROR_NOT_DIR);}public function scandir($hash){if(($dir=$this->dir($hash))==false){return false;}$path=$this->decode($hash);if($res=$dir['read']?$this->getScandir($path):$this->setError(elFinder::ERROR_PERM_DENIED)){$dirs=null;if($this->sessionCaching['subdirs']&&isset($this->sessionCache['subdirs'][$path])){$dirs=$this->sessionCache['subdirs'][$path];}if($dirs!==null||(isset($dir['dirs'])&&$dir['dirs']!=1)){$_dir=$dir;if($dirs||$this->subdirs($hash)){$dir['dirs']=1;}else{unset($dir['dirs']);}if($dir!==$_dir){$this->updateCache($path,$dir);}}}return$res;}public function ls($hash,$intersect=null){if(($dir=$this->dir($hash))==false||!$dir['read']){return false;}$list=array();$path=$this->decode($hash);$check=array();if($intersect){$check=array_flip($intersect);}foreach($this->getScandir($path)as $stat){if(empty($stat['hidden'])&&(!$check||isset($check[$stat['name']]))&&$this->mimeAccepted($stat['mime'])){$list[$stat['hash']]=$stat['name'];}}return $list;}public function tree($hash='',$deep=0,$exclude=''){$path=$hash?$this->decode($hash):$this->root;if(($dir=$this->stat($path))==false||$dir['mime']!='directory'){return false;}$dirs=$this->gettree($path,$deep>0?$deep-1:$this->treeDeep-1,$exclude?$this->decode($exclude):null);array_unshift($dirs,$dir);return$dirs;}public function parents($hash,$lineal=false){if(($current=$this->dir($hash))==false){return false;}$args=func_get_args();$until='';if(isset($args[2])){$until=$args[2];}$path=$this->decode($hash);$tree=array();while($path&&$path!=$this->root){elFinder::checkAborted();$path=$this->dirnameCE($path);if(!($stat=$this->stat($path))||!empty($stat['hidden'])||!$stat['read']){return false;}array_unshift($tree,$stat);if(!$lineal){foreach($this->gettree($path,0)as$dir){elFinder::checkAborted();if(!isset($tree[$dir['hash']])){$tree[$dir['hash']]=$dir;}}}if($until&&$until===$this->encode($path)){break;}}return$tree?array_values($tree):array($current);}public function tmb($hash){$path=$this->decode($hash);$stat=$this->stat($path);if(isset($stat['tmb'])){$res=$stat['tmb']=="1"?$this->createTmb($path,$stat):$stat['tmb'];if(!$res){list($type)=explode('/',$stat['mime']);$fallback=$this->options['resourcePath'].DIRECTORY_SEPARATOR.strtolower($type).'.png';if(is_file($fallback)){$res=$this->tmbname($stat);if(!copy($fallback,$this->tmbPath.DIRECTORY_SEPARATOR.$res)){$res=false;}}}if($res&&$this->options['tmbGcMaxlifeHour']&&$this->options['tmbGcPercentage']>0){$rand=mt_rand(1,10000);if($rand<=$this->options['tmbGcPercentage']*100){register_shutdown_function(array('elFinder','GlobGC'),$this->tmbPath.DIRECTORY_SEPARATOR.'*.png',$this->options['tmbGcMaxlifeHour']*3600);}}return$res;}return false;}public function size($hash){return$this->countSize($this->decode($hash));}public function open($hash){if(($file=$this->file($hash))==false||$file['mime']=='directory'){return false;}if(func_num_args()>1){$opts=func_get_arg(1);}else{$opts=array();}return$this->fopenCE($this->decode($hash),'rb',$opts);}public function close($fp,$hash){$this->fcloseCE($fp,$this->decode($hash));}public function mkdir($dsthash,$name){if($this->commandDisabled('mkdir')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(!$this->nameAccepted($name,true)){return$this->setError(elFinder::ERROR_INVALID_DIRNAME);}if(($dir=$this->dir($dsthash))==false){return$this->setError(elFinder::ERROR_TRGDIR_NOT_FOUND,'#'.$dsthash);}$path=$this->decode($dsthash);if(!$dir['write']||!$this->allowCreate($path,$name,true)){return$this->setError(elFinder::ERROR_PERM_DENIED);}$dst=$this->joinPathCE($path,$name);$stat=$this->isNameExists($dst);if(!empty($stat)){return$this->setError(elFinder::ERROR_EXISTS,$name);}$this->clearcache();$mkpath=$this->convEncOut($this->_mkdir($this->convEncIn($path),$this->convEncIn($name)));if($mkpath){$this->clearstatcache();$this->updateSubdirsCache($path,true);$this->updateSubdirsCache($mkpath,false);}return$mkpath?$this->stat($mkpath):false;}public function mkfile($dst,$name){if($this->commandDisabled('mkfile')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(!$this->nameAccepted($name,false)){return$this->setError(elFinder::ERROR_INVALID_NAME);}$mimeByName=$this->mimetype($name,true);if($mimeByName&&!$this->allowPutMime($mimeByName)){return$this->setError(elFinder::ERROR_UPLOAD_FILE_MIME,$name);}if(($dir=$this->dir($dst))==false){return$this->setError(elFinder::ERROR_TRGDIR_NOT_FOUND,'#'.$dst);}$path=$this->decode($dst);if(!$dir['write']||!$this->allowCreate($path,$name,false)){return$this->setError(elFinder::ERROR_PERM_DENIED);}if($this->isNameExists($this->joinPathCE($path,$name))){return$this->setError(elFinder::ERROR_EXISTS,$name);}$this->clearcache();$res=false;if($path=$this->convEncOut($this->_mkfile($this->convEncIn($path),$this->convEncIn($name)))){$this->clearstatcache();$res=$this->stat($path);}return$res;}public function rename($hash,$name){if($this->commandDisabled('rename')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(!($file=$this->file($hash))){return$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}if($name===$file['name']){return$file;}if(!empty($this->options['netkey'])&&!empty($file['isroot'])){$rootKey=$this->getRootstatCachekey();if($this->sessionCaching['rootstat']){unset($this->sessionCaching['rootstat'][$rootKey]);}if(elFinder::$instance->updateNetVolumeOption($this->options['netkey'],'alias',$name)){$this->clearcache();$this->rootName=$this->options['alias']=$name;return$this->stat($this->root);}else{return$this->setError(elFinder::ERROR_TRGDIR_NOT_FOUND,$name);}}if(!empty($file['locked'])){return$this->setError(elFinder::ERROR_LOCKED,$file['name']);}$isDir=($file['mime']==='directory');if(!$this->nameAccepted($name,$isDir)){return$this->setError($isDir?elFinder::ERROR_INVALID_DIRNAME:elFinder::ERROR_INVALID_NAME);}if(!$isDir){$mimeByName=$this->mimetype($name,true);if($mimeByName&&!$this->allowPutMime($mimeByName)){return$this->setError(elFinder::ERROR_UPLOAD_FILE_MIME,$name);}}$path=$this->decode($hash);$dir=$this->dirnameCE($path);$stat=$this->isNameExists($this->joinPathCE($dir,$name));if($stat){return$this->setError(elFinder::ERROR_EXISTS,$name);}if(!$this->allowCreate($dir,$name,($file['mime']==='directory'))){return$this->setError(elFinder::ERROR_PERM_DENIED);}$this->rmTmb($file);if($path=$this->convEncOut($this->_move($this->convEncIn($path),$this->convEncIn($dir),$this->convEncIn($name)))){$this->clearcache();return$this->stat($path);}return false;}public function duplicate($hash,$suffix='copy'){if($this->commandDisabled('duplicate')){return$this->setError(elFinder::ERROR_COPY,'#'.$hash,elFinder::ERROR_PERM_DENIED);}if(($file=$this->file($hash))==false){return$this->setError(elFinder::ERROR_COPY,elFinder::ERROR_FILE_NOT_FOUND);}$path=$this->decode($hash);$dir=$this->dirnameCE($path);$name=$this->uniqueName($dir,$file['name'],sprintf($this->options['duplicateSuffix'],$suffix));if(!$this->allowCreate($dir,$name,($file['mime']==='directory'))){return $this->setError(elFinder::ERROR_PERM_DENIED);}return($path=$this->copy($path,$dir,$name))==false?false:$this->stat($path);}public function upload($fp,$dst,$name,$tmpname,$hashes=array()){if($this->commandDisabled('upload')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(($dir=$this->dir($dst))==false){return$this->setError(elFinder::ERROR_TRGDIR_NOT_FOUND,'#'.$dst);}if(empty($dir['write'])){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(!$this->nameAccepted($name,false)){return$this->setError(elFinder::ERROR_INVALID_NAME);}$mimeByName='';if($this->mimeDetect==='internal'){$mime=$this->mimetype($tmpname,$name);}else{$mime=$this->mimetype($tmpname,$name);$mimeByName=$this->mimetype($name,true);if($mime==='unknown'){$mime=$mimeByName;}}if(!$this->allowPutMime($mime)||($mimeByName&&!$this->allowPutMime($mimeByName))){return$this->setError(elFinder::ERROR_UPLOAD_FILE_MIME,'('.$mime.')');}$tmpsize=(int)sprintf('%u',filesize($tmpname));if($this->uploadMaxSize>0&&$tmpsize>$this->uploadMaxSize){return$this->setError(elFinder::ERROR_UPLOAD_FILE_SIZE);}$dstpath=$this->decode($dst);if(isset($hashes[$name])){$test=$this->decode($hashes[$name]);$file=$this->stat($test);}else{$test=$this->joinPathCE($dstpath,$name);$file=$this->isNameExists($test);}$this->clearcache();if($file&&$file['name']===$name){if($this->uploadOverwrite){if(!$file['write']){return$this->setError(elFinder::ERROR_PERM_DENIED);}elseif($file['mime']=='directory'){return$this->setError(elFinder::ERROR_NOT_REPLACE,$name);}$this->remove($test);}else{$name=$this->uniqueName($dstpath,$name,'-',false);}}$stat=array('mime'=>$mime,'width'=>0,'height'=>0,'size'=>$tmpsize);if(strpos($mime,'image')===0&&($s=getimagesize($tmpname))){$stat['width']=$s[0];$stat['height']=$s[1];}if(($path=$this->saveCE($fp,$dstpath,$name,$stat))==false){return false;}$stat=$this->stat($path);if(empty($stat['url'])&&($url=$this->getContentUrl($stat['hash']))){$stat['url']=$url;}return$stat;}public function paste($volume,$src,$dst,$rmSrc=false,$hashes=array()){$err=$rmSrc?elFinder::ERROR_MOVE:elFinder::ERROR_COPY;if($this->commandDisabled('paste')){return$this->setError($err,'#'.$src,elFinder::ERROR_PERM_DENIED);}if(($file=$volume->file($src,$rmSrc))==false){return$this->setError($err,'#'.$src,elFinder::ERROR_FILE_NOT_FOUND);}$name=$file['name'];$errpath=$volume->path($file['hash']);if(($dir=$this->dir($dst))==false){return$this->setError($err,$errpath,elFinder::ERROR_TRGDIR_NOT_FOUND,'#'.$dst);}if(!$dir['write']||!$file['read']){return $this->setError($err,$errpath,elFinder::ERROR_PERM_DENIED);}$destination=$this->decode($dst);if(($test=$volume->closest($src,$rmSrc?'locked':'read',$rmSrc))){return$rmSrc?$this->setError($err,$errpath,elFinder::ERROR_LOCKED,$volume->path($test)):$this->setError($err,$errpath,empty($file['thash'])?elFinder::ERROR_PERM_DENIED:elFinder::ERROR_MKOUTLINK);}if(isset($hashes[$name])){$test=$this->decode($hashes[$name]);$stat=$this->stat($test);}else{$test=$this->joinPathCE($destination,$name);$stat=$this->isNameExists($test);}$this->clearcache();$dstDirExists=false;if($stat&&$stat['name']===$name){if($this->options['copyOverwrite']){if(!$this->isSameType($file['mime'],$stat['mime'])){return$this->setError(elFinder::ERROR_NOT_REPLACE,$this->path($stat['hash']));}if(empty($stat['write'])){return$this->setError($err,$errpath,elFinder::ERROR_PERM_DENIED);}if($this->options['copyJoin']){if(!empty($stat['locked'])){return $this->setError(elFinder::ERROR_LOCKED,$this->path($stat['hash']));}}else{if(($locked=$this->closestByAttr($test,'locked',true))){$stat=$this->stat($locked);return$this->setError(elFinder::ERROR_LOCKED,$this->path($stat['hash']));}}if($volume===$this&&((isset($file['target'])&&$test==$file['target'])||$test==$this->decode($src))){return$this->setError(elFinder::ERROR_REPLACE,$errpath);}if(!$this->options['copyJoin']||$stat['mime']!=='directory'){if(!$this->remove($test)){return$this->setError(elFinder::ERROR_REPLACE,$this->path($stat['hash']));}}elseif($stat['mime']==='directory'){$dstDirExists=true;}}else{$name=$this->uniqueName($destination,$name,' ',false);}}if($volume===$this){$source=$this->decode($src);if($this->inpathCE($destination,$source)){return$this->setError(elFinder::ERROR_COPY_ITSELF,$errpath);}$rmDir=false;if($rmSrc){if($dstDirExists){$rmDir=true;$method='copy';}else{$method='move';}}else{$method='copy';}$this->clearcache();if($res=($path=$this->$method($source,$destination,$name))?$this->stat($path):false){if($rmDir){$this->remove($source);}}else{return false;}}else{if(!$this->options['copyTo']||!$volume->copyFromAllowed()){return$this->setError(elFinder::ERROR_COPY,$errpath,elFinder::ERROR_PERM_DENIED);}$this->error=array();if(($path=$this->copyFrom($volume,$src,$destination,$name))==false){return false;}if($rmSrc&&!$this->error()){if(!$volume->rm($src)){if($volume->file($src)){$this->addError(elFinder::ERROR_RM_SRC);}else{$this->removed[]=$file;}}}$res=$this->stat($path);}return$res;}public function zipdl($hashes){if($this->commandDisabled('zipdl')){return$this->setError(elFinder::ERROR_PERM_DENIED);}$archivers=$this->getArchivers();$cmd=null;if(!$archivers||empty($archivers['create'])){return false;}$archivers=$archivers['create'];if(!$archivers){return false;}$file=$mime='';foreach(array('zip','tgz')as$ext){$mime=$this->mimetype('file.'.$ext,true);if(isset($archivers[$mime])){$cmd=$archivers[$mime];break;}}if(!$cmd){$cmd=array_shift($archivers);if(!empty($ext)){$mime=$this->mimetype('file.'.$ext,true);}}$ext=$cmd['ext'];$res=false;$mixed=false;$hashes=array_values($hashes);$dirname=dirname(str_replace($this->separator,DIRECTORY_SEPARATOR,$this->path($hashes[0])));$cnt=count($hashes);if($cnt>1){for($i=1;$i<$cnt;$i++){if($dirname!==dirname(str_replace($this->separator,DIRECTORY_SEPARATOR,$this->path($hashes[$i])))){$mixed=true;break;}}}if($mixed||$this->root==$this->dirnameCE($this->decode($hashes[0]))){$prefix=$this->rootName;}else{$prefix=basename($dirname);}if($dir=$this->getItemsInHand($hashes)){$tmppre=(substr(PHP_OS,0,3)==='WIN')?'zd-':'elfzdl-';$pdir=dirname($dir);register_shutdown_function(array('elFinder','GlobGC'),$pdir.DIRECTORY_SEPARATOR.$tmppre.'*',7200);$files=self::localScandir($dir);if($files&&($arc=tempnam($dir,$tmppre))){unlink($arc);$arc=$arc.'.'.$ext;$name=basename($arc);if($arc=$this->makeArchive($dir,$files,$name,$cmd)){$file=tempnam($pdir,$tmppre);unlink($file);$res=rename($arc,$file);$this->rmdirRecursive($dir);}}}return$res?array('path'=>$file,'ext'=>$ext,'mime'=>$mime,'prefix'=>$prefix):false;}public function getContents($hash){$file=$this->file($hash);if(!$file){return$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}if($file['mime']=='directory'){return$this->setError(elFinder::ERROR_NOT_FILE);}if(!$file['read']){return$this->setError(elFinder::ERROR_PERM_DENIED);}if($this->getMaxSize>0&&$file['size']>$this->getMaxSize){return$this->setError(elFinder::ERROR_UPLOAD_FILE_SIZE);}return$file['size']?$this->_getContents($this->convEncIn($this->decode($hash),true)):'';}public function putContents($hash,$content){if($this->commandDisabled('edit')){return$this->setError(elFinder::ERROR_PERM_DENIED);}$path=$this->decode($hash);if(!($file=$this->file($hash))){return$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}if(!$file['write']){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(preg_match('~^\0data:(.+?/.+?);base64,~',$content,$m)){$dMime=$m[1];if($file['size']>0&&$dMime!==$file['mime']){return$this->setError(elFinder::ERROR_PERM_DENIED);}$content=base64_decode(substr($content,strlen($m[0])));}$name=$this->basenameCE($path);$mime='';$mimeByName=$this->mimetype($name,true);if($this->mimeDetect!=='internal'){if($tp=$this->tmpfile()){fwrite($tp,$content);$info=stream_get_meta_data($tp);$filepath=$info['uri'];$mime=$this->mimetype($filepath,$name);fclose($tp);}}if(!$this->allowPutMime($mimeByName)||($mime&&!$this->allowPutMime($mime))){return $this->setError(elFinder::ERROR_UPLOAD_FILE_MIME);}$this->clearcache();$res=false;if($this->convEncOut($this->_filePutContents($this->convEncIn($path),$content))){$this->rmTmb($file);$this->clearstatcache();$res=$this->stat($path);}return$res;}public function extract($hash,$makedir=null){if($this->commandDisabled('extract')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if(($file=$this->file($hash))==false){return$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}$archiver=isset($this->archivers['extract'][$file['mime']])?$this->archivers['extract'][$file['mime']]:array();if(!$archiver){return$this->setError(elFinder::ERROR_NOT_ARCHIVE);}$path=$this->decode($hash);$parent=$this->stat($this->dirnameCE($path));if(!$file['read']||!$parent['write']){return$this->setError(elFinder::ERROR_PERM_DENIED);}$this->clearcache();$this->extractToNewdir=is_null($makedir)?'auto':(bool)$makedir;if($path=$this->convEncOut($this->_extract($this->convEncIn($path),$archiver))){if(is_array($path)){foreach($path as$_k=>$_p){$path[$_k]=$this->stat($_p);}}else{$path=$this->stat($path);}return$path;}else{return false;}}public function archive($hashes,$mime,$name=''){if($this->commandDisabled('archive')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if($name!==''&&!$this->nameAccepted($name,false)){return$this->setError(elFinder::ERROR_INVALID_NAME);}$archiver=isset($this->archivers['create'][$mime])?$this->archivers['create'][$mime]:array();if(!$archiver){return$this->setError(elFinder::ERROR_ARCHIVE_TYPE);}$files=array();$useRemoteArchive=!empty($this->options['useRemoteArchive']);$dir='';foreach($hashes as $hash){if(($file=$this->file($hash))==false){return$this->setError(elFinder::ERROR_FILE_NOT_FOUND,'#'.$hash);}if(!$file['read']){return$this->setError(elFinder::ERROR_PERM_DENIED);}$path=$this->decode($hash);if($dir===''){$dir=$this->dirnameCE($path);$stat=$this->stat($dir);if(!$stat['write']){return$this->setError(elFinder::ERROR_PERM_DENIED);}}$files[]=$useRemoteArchive?$hash:$this->basenameCE($path);}if($name===''){$name=count($files)==1?$files[0]:'Archive';}else{$name=str_replace(array('/','\\'),'_',preg_replace('/\.'.preg_quote($archiver['ext'],'/').'$/i','',$name));}$name.='.'.$archiver['ext'];$name=$this->uniqueName($dir,$name,'');$this->clearcache();if($useRemoteArchive){return($path=$this->remoteArchive($files,$name,$archiver))?$this->stat($path):false;}else{return($path=$this->convEncOut($this->_archive($this->convEncIn($dir),$this->convEncIn($files),$this->convEncIn($name),$archiver)))?$this->stat($path):false;}}protected function remoteArchive($hashes,$name,$arc){$resPath=false;$file0=$this->file($hashes[0]);if($file0&&($dir=$this->getItemsInHand($hashes))){$files=self::localScandir($dir);if($files){if($arc=$this->makeArchive($dir,$files,$name,$arc)){if($fp=fopen($arc,'rb')){$fstat=stat($arc);$stat=array('size'=>$fstat['size'],'ts'=>$fstat['mtime'],'mime'=>$this->mimetype($arc,$name));$path=$this->decode($file0['phash']);$resPath=$this->saveCE($fp,$path,$name,$stat);fclose($fp);}}}$this->rmdirRecursive($dir);}return$resPath;}public function resize($hash,$width,$height,$x,$y,$mode='resize',$bg='',$degree=0,$jpgQuality=null){if($this->commandDisabled('resize')){return$this->setError(elFinder::ERROR_PERM_DENIED);}if($mode==='rotate'&&$degree==0){return array('losslessRotate'=>($this->procExec(ELFINDER_EXIFTRAN_PATH.' -h')===0||$this->procExec(ELFINDER_JPEGTRAN_PATH.' -version')===0));}if(($file=$this->file($hash))==false){return$this->setError(elFinder::ERROR_FILE_NOT_FOUND);}if(!$file['write']||!$file['read']){return $this->setError(elFinder::ERROR_PERM_DENIED);}$path=$this->decode($hash);$work_path=$this->getWorkFile($this->encoding?$this->convEncIn($path,true):$path);if(!$work_path||!is_writable($work_path)){if($work_path&&$path!==$work_path&&is_file($work_path)){unlink($work_path);}return $this->setError(elFinder::ERROR_PERM_DENIED);}if($this->imgLib!=='imagick'&&$this->imgLib!=='convert'){if(elFinder::isAnimationGif($work_path)){return$this->setError(elFinder::ERROR_UNSUPPORT_TYPE);}}if(elFinder::isAnimationPng($work_path)){return$this->setError(elFinder::ERROR_UNSUPPORT_TYPE);}switch($mode){case'propresize':$result=$this->imgResize($work_path,$width,$height,true,true,null,$jpgQuality);break;case'crop':$result=$this->imgCrop($work_path,$width,$height,$x,$y,null,$jpgQuality);break;case'fitsquare':$result=$this->imgSquareFit($work_path,$width,$height,'center','middle',($bg?$bg:$this->options['tmbBgColor']),null,$jpgQuality);break;case'rotate':$result=$this->imgRotate($work_path,$degree,($bg?$bg:$this->options['bgColorFb']),null,$jpgQuality);break;default:$result=$this->imgResize($work_path,$width,$height,false,true,null,$jpgQuality);break;}$ret=false;if($result){$this->rmTmb($file);$this->clearstatcache();$fstat=stat($work_path);$imgsize=getimagesize($work_path);if($path!==$work_path){$file['size']=$fstat['size'];$file['ts']=$fstat['mtime'];if($imgsize){$file['width']=$imgsize[0];$file['height']=$imgsize[1];}if($fp=fopen($work_path,'rb')){$ret=$this->saveCE($fp,$this->dirnameCE($path),$this->basenameCE($path),$file);fclose($fp);}}else{$ret=true;}if($ret){$this->clearcache();$ret=$this->stat($path);if($imgsize){$ret['width']=$imgsize[0];$ret['height']=$imgsize[1];}}}if($path!==$work_path){is_file($work_path)&&unlink($work_path);}return$ret;}public function rm($hash){return $this->commandDisabled('rm')?$this->setError(elFinder::ERROR_PERM_DENIED):$this->remove($this->decode($hash));}public function search($q,$mimes,$hash=null){$res=array();$matchMethod=null;$args=func_get_args();if(!empty($args[3])){$matchMethod='searchMatch'.$args[3];if(!is_callable(array($this,$matchMethod))){return array();}}$dir=null;if($hash){$dir=$this->decode($hash);$stat=$this->stat($dir);if(!$stat||$stat['mime']!=='directory'||!$stat['read']){$q='';}}if($mimes&&$this->onlyMimes){$mimes=array_intersect($mimes,$this->onlyMimes);if(!$mimes){$q='';}}$this->searchStart=time();$qs=preg_split('/"([^"]+)"| +/',$q,-1,PREG_SPLIT_NO_EMPTY|PREG_SPLIT_DELIM_CAPTURE);$query=$excludes=array();foreach($qs as$_q){$_q=trim($_q);if($_q!==''){if($_q[0]==='-'){if(isset($_q[1])){$excludes[]=substr($_q,1);}}else{$query[]=$_q;}}}if(!$query){$q='';}else{$q=join(' ',$query);$this->doSearchCurrentQuery=array('q'=>$q,'excludes'=>$excludes,'matchMethod'=>$matchMethod);}if($q===''||$this->commandDisabled('search')){return$res;}if($this->options['searchExDirReg']){if(false===preg_match($this->options['searchExDirReg'],'')){$this->options['searchExDirReg']='';}}if(!$mimes&&(is_null($dir)||$dir==$this->root)){$rootStat=$this->stat($this->root);if(!empty($rootStat['phash'])){if($this->stripos($rootStat['name'],$q)!==false){$res=array($rootStat);}}}return array_merge($res,$this->doSearch(is_null($dir)?$this->root:$dir,$q,$mimes));}public function dimensions($hash){if(($file=$this->file($hash))==false){return false;}if(func_num_args()>1){$args=func_get_arg(1);}else{$args=array();}return $this->convEncOut($this->_dimensions($this->convEncIn($this->decode($hash)),$file['mime'],$args));}public function subdirs($hash){return (bool)$this->subdirsCE($this->decode($hash));}public function getContentUrl($hash,$options=array()){if(($file=$this->file($hash))===false){return false;}if(!empty($options['onetime'])&&$this->options['onetimeUrl']){if(is_callable($this->options['onetimeUrl'])){return call_user_func_array($this->options['onetimeUrl'],array($file,$options,$this));}else{$ret=false;if($tmpdir=elFinder::getStaticVar('commonTempPath')){if($source=$this->open($hash)){if($_dat=tempnam($tmpdir,'ELF')){$token=md5($_dat.session_id());$dat=$tmpdir.DIRECTORY_SEPARATOR.'ELF'.$token;if(rename($_dat,$dat)){$info=stream_get_meta_data($source);if(!empty($info['uri'])){$tmp=$info['uri'];}else{$tmp=tempnam($tmpdir,'ELF');if($dest=fopen($tmp,'wb')){if(!stream_copy_to_stream($source,$dest)){$tmp=false;}fclose($dest);}}$this->close($source,$hash);if($tmp){$info=array('file'=>base64_encode($tmp),'name'=>$file['name'],'mime'=>$file['mime'],'ts'=>$file['ts']);if(file_put_contents($dat,json_encode($info))){$conUrl=elFinder::getConnectorUrl();$ret=$conUrl.(strpos($conUrl,'?')!==false?'&':'?').'cmd=file&onetime=1&target='.$token;}}if(!$ret){unlink($dat);}}else{unlink($_dat);}}}}return$ret;}}if(empty($file['url'])&&$this->URL){$path=str_replace($this->separator,'/',substr($this->decode($hash),strlen(rtrim($this->root,'/'.$this->separator))+1));if($this->encoding){$path=$this->convEncIn($path,true);}$path=str_replace('%2F','/',rawurlencode($path));return$this->URL.$path;}else{$ret=false;if(!empty($file['url'])&&$file['url']!=1){return$file['url'];}elseif(!empty($options['temporary'])&&($tempInfo=$this->getTempLinkInfo('temp_'.md5($hash.session_id())))){if(is_readable($tempInfo['path'])){touch($tempInfo['path']);$ret=$tempInfo['url'].'?'.rawurlencode($file['name']);}elseif($source=$this->open($hash)){if($dest=fopen($tempInfo['path'],'wb')){if(stream_copy_to_stream($source,$dest)){$ret=$tempInfo['url'].'?'.rawurlencode($file['name']);}fclose($dest);}$this->close($source,$hash);}}return $ret;}}public function getTempLinkInfo($name=null){if($this->tmpLinkPath){if(!$name){$name='temp_'.md5($_SERVER['REMOTE_ADDR'].(string)microtime(true));}elseif(substr($name,0,5)!=='temp_'){$name='temp_'.$name;}register_shutdown_function(array('elFinder','GlobGC'),$this->tmpLinkPath.DIRECTORY_SEPARATOR.'temp_*',elFinder::$tmpLinkLifeTime);return array('path'=>$path=$this->tmpLinkPath.DIRECTORY_SEPARATOR.$name,'url'=>$this->tmpLinkUrl.'/'.rawurlencode($name));}return false;}public function getSubstituteImgLink($target,$srcSize,$srcfp=null,$maxSize=null){$url=false;$file=$this->file($target);$force=!in_array($file['mime'],array('image/jpeg','image/png','image/gif'));if(!$maxSize){$args=elFinder::$currentArgs;if(!empty($args['substitute'])){$maxSize=$args['substitute'];}}if($maxSize&&$srcSize[0]&&$srcSize[1]){if($this->getOption('substituteImg')){$maxSize=intval($maxSize);$zoom=min(($maxSize/$srcSize[0]),($maxSize/$srcSize[1]));if($force||$zoom<1){$width=round($srcSize[0]*$zoom);$height=round($srcSize[1]*$zoom);$jpgQuality=50;$preserveExif=false;$unenlarge=true;$checkAnimated=true;$destformat=$file['mime']==='image/jpeg'?null:'png';if(!$srcfp){elFinder::checkAborted();$srcfp=$this->open($target);}if($srcfp&&($tempLink=$this->getTempLinkInfo())){elFinder::checkAborted();$dest=fopen($tempLink['path'],'wb');if($dest&&stream_copy_to_stream($srcfp,$dest)){fclose($dest);if($this->imageUtil('resize',$tempLink['path'],compact('width','height','jpgQuality','preserveExif','unenlarge','checkAnimated','destformat'))){$url=$tempLink['url'];touch($tempLink['path'],time()-elFinder::$tmpLinkLifeTime+60);}else{unlink($tempLink['path']);}}$this->close($srcfp,$target);}}}}return$url;}public function getTempPath(){$tempPath=null;if(isset($this->tmpPath)&&$this->tmpPath&&is_writable($this->tmpPath)){$tempPath=$this->tmpPath;}elseif(isset($this->tmp)&&$this->tmp&&is_writable($this->tmp)){$tempPath=$this->tmp;}elseif(elFinder::getStaticVar('commonTempPath')&&is_writable(elFinder::getStaticVar('commonTempPath'))){$tempPath=elFinder::getStaticVar('commonTempPath');}elseif(function_exists('sys_get_temp_dir')){$tempPath=sys_get_temp_dir();}elseif($this->tmbPathWritable){$tempPath=$this->tmbPath;}if($tempPath&&DIRECTORY_SEPARATOR!=='/'){$tempPath=str_replace('/',DIRECTORY_SEPARATOR,$tempPath);}return$tempPath;}public function getUploadTaget($baseTargetHash,$path,&$result){$base=$this->decode($baseTargetHash);$targetHash=$baseTargetHash;$path=ltrim($path,$this->separator);$dirs=explode($this->separator,$path);array_pop($dirs);foreach($dirs as$dir){$targetPath=$this->joinPathCE($base,$dir);if(!$_realpath=$this->realpath($this->encode($targetPath))){if($stat=$this->mkdir($targetHash,$dir)){$result['added'][]=$stat;$targetHash=$stat['hash'];$base=$this->decode($targetHash);}else{return false;}}else{$targetHash=$this->encode($_realpath);if($this->dir($targetHash)){$base=$this->decode($targetHash);}else{return false;}}}return $targetHash;}public function getUploadMaxSize(){return $this->uploadMaxSize;}public function setUploadOverwrite($var){$this->uploadOverwrite=(bool)$var;}public function imageUtil($mode,$src,$options=array()){if(!isset($options['jpgQuality'])){$options['jpgQuality']=intval($this->options['jpgQuality']);}if(!isset($options['bgcolor'])){$options['bgcolor']='#ffffff';}if(!isset($options['bgColorFb'])){$options['bgColorFb']=$this->options['bgColorFb'];}$destformat=!empty($options['destformat'])?$options['destformat']:null;if(in_array($mode,array('resize','propresize','crop','fitsquare'))){if(empty($options['width'])||empty($options['height'])){return false;}}if(!empty($options['checkAnimated'])){if($this->imgLib!=='imagick'&&$this->imgLib!=='convert'){if(elFinder::isAnimationGif($src)){return false;}}if(elFinder::isAnimationPng($src)){return false;}}switch($mode){case 'rotate':if(empty($options['degree'])){return true;}return(bool)$this->imgRotate($src,$options['degree'],$options['bgColorFb'],$destformat,$options['jpgQuality']);case'resize':return(bool)$this->imgResize($src,$options['width'],$options['height'],false,true,$destformat,$options['jpgQuality'],$options);case'propresize':return(bool)$this->imgResize($src,$options['width'],$options['height'],true,true,$destformat,$options['jpgQuality'],$options);case'crop':if(isset($options['x'])&&isset($options['y'])){return(bool)$this->imgCrop($src,$options['width'],$options['height'],$options['x'],$options['y'],$destformat,$options['jpgQuality']);}break;case 'fitsquare':return(bool)$this->imgSquareFit($src,$options['width'],$options['height'],'center','middle',$options['bgcolor'],$destformat,$options['jpgQuality']);}return false;}public function ffmpegToImg($file,$stat,$self,$ss=null){$name=basename($file);$path=dirname($file);$tmp=$path.DIRECTORY_SEPARATOR.md5($name);$GLOBALS['elFinderTempFiles'][$tmp]=true;if(rename($file,$tmp)){if($ss===null){if(preg_match('/\^(\d+(?:\.\d+)?)\.[^.]+$/',$stat['name'],$_m)){$ss=$_m[1];}else{$ss=$this->options['tmbVideoConvSec'];}}$cmd=sprintf(ELFINDER_FFMPEG_PATH.' -i %s -ss 00:00:%.3f -vframes 1 -f image2 -- %s',escapeshellarg($tmp),$ss,escapeshellarg($file));$r=($this->procExec($cmd)===0);clearstatcache();if($r&&$ss>0&&!file_exists($file)){$ss=max(intval($ss/2),0);rename($tmp,$file);$r=$this->ffmpegToImg($file,$stat,$self,$ss);}else{unlink($tmp);}return $r;}return false;}public function tmpfile(){if($tmp=$this->getTempFile()){return fopen($tmp,'wb');}return false;}protected function setError(){$this->error=array();$this->addError(func_get_args());return false;}protected function addError(){foreach(func_get_args()as$err){if(is_array($err)){foreach($err as$er){$this->addError($er);}}else{$this->error[]=(string)$err;}}return false;}protected function dirnameCE($path){$dirname=(!$this->encoding)?$this->_dirname($path):$this->convEncOut($this->_dirname($this->convEncIn($path)));return($dirname!=$path)?$dirname:'';}protected function basenameCE($path){return(!$this->encoding)?$this->_basename($path):$this->convEncOut($this->_basename($this->convEncIn($path)));}protected function joinPathCE($dir,$name){return(!$this->encoding)?$this->_joinPath($dir,$name):$this->convEncOut($this->_joinPath($this->convEncIn($dir),$this->convEncIn($name)));}protected function normpathCE($path){return(!$this->encoding)?$this->_normpath($path):$this->convEncOut($this->_normpath($this->convEncIn($path)));}protected function relpathCE($path){return(!$this->encoding)?$this->_relpath($path):$this->convEncOut($this->_relpath($this->convEncIn($path)));}protected function abspathCE($path){return(!$this->encoding)?$this->_abspath($path):$this->convEncOut($this->_abspath($this->convEncIn($path)));}protected function inpathCE($path,$parent){return(!$this->encoding)?$this->_inpath($path,$parent):$this->convEncOut($this->_inpath($this->convEncIn($path),$this->convEncIn($parent)));}protected function fopenCE($path,$mode='rb'){if(func_num_args()>2){$opts=func_get_arg(2);}else{$opts=array();}return(!$this->encoding)?$this->_fopen($path,$mode,$opts):$this->convEncOut($this->_fopen($this->convEncIn($path),$mode,$opts));}protected function fcloseCE($fp,$path=''){return(!$this->encoding)?$this->_fclose($fp,$path):$this->convEncOut($this->_fclose($fp,$this->convEncIn($path)));}protected function saveCE($fp,$dir,$name,$stat){$res=(!$this->encoding)?$this->_save($fp,$dir,$name,$stat):$this->convEncOut($this->_save($fp,$this->convEncIn($dir),$this->convEncIn($name),$this->convEncIn($stat)));if($res!==false){$this->clearstatcache();}return$res;}protected function subdirsCE($path){if($this->sessionCaching['subdirs']){if(isset($this->sessionCache['subdirs'][$path])&&!$this->isMyReload()){return$this->sessionCache['subdirs'][$path];}}$hasdir=(bool)((!$this->encoding)?$this->_subdirs($path):$this->convEncOut($this->_subdirs($this->convEncIn($path))));$this->updateSubdirsCache($path,$hasdir);return $hasdir;}protected function scandirCE($path){return(!$this->encoding)?$this->_scandir($path):$this->convEncOut($this->_scandir($this->convEncIn($path)));}protected function symlinkCE($source,$targetDir,$name){return(!$this->encoding)?$this->_symlink($source,$targetDir,$name):$this->convEncOut($this->_symlink($this->convEncIn($source),$this->convEncIn($targetDir),$this->convEncIn($name)));}protected function encode($path){if($path!==''){$p=$this->relpathCE($path);if($p===''){$p=$this->separator;}if($this->separatorForHash){$p=str_replace($this->separator,$this->separatorForHash,$p);}$hash=$this->crypt($p);$hash=strtr(base64_encode($hash),'+/=','-_.');$hash=rtrim($hash,'.');return$this->id.$hash;}}protected function decode($hash){if(strpos($hash,$this->id)===0){$h=substr($hash,strlen($this->id));$h=base64_decode(strtr($h,'-_.','+/='));$path=$this->uncrypt($h);if($this->separatorForHash){$path=str_replace($this->separatorForHash,$this->separator,$path);}return$this->abspathCE($path);}return'';}protected function crypt($path){return$path;}protected function uncrypt($hash){return$hash;}protected function nameAccepted($name,$isDir=false){if(json_encode($name)===false){return false;}$nameValidator=$isDir?$this->dirnameValidator:$this->nameValidator;if($nameValidator){if(is_callable($nameValidator)){$res=call_user_func($nameValidator,$name);return$res;}if(preg_match($nameValidator,'')!==false){return preg_match($nameValidator,$name);}}return true;}protected function getRootstatCachekey(){return md5($this->root.(isset($this->options['alias'])?$this->options['alias']:''));}public function uniqueName($dir,$name,$suffix=' copy',$checkNum=true,$start=1){static $lasts=null;if($lasts===null){$lasts=array();}$ext='';$splits=elFinder::splitFileExtention($name);if($splits[1]){$ext='.'.$splits[1];$name=$splits[0];}if($checkNum&&preg_match('/('.preg_quote($suffix,'/').')(\d*)$/i',$name,$m)){$i=(int)$m[2];$name=substr($name,0,strlen($name)-strlen($m[2]));}else{$i=$start;$name.=$suffix;}$max=$i+100000;if(isset($lasts[$name])){$i=max($i,$lasts[$name]);}while($i<=$max){$n=$name.($i>0?sprintf($this->options['uniqueNumFormat'],$i):'').$ext;if(!$this->isNameExists($this->joinPathCE($dir,$n))){$this->clearcache();$lasts[$name]=++$i;return$n;}$i++;}return$name.md5($dir).$ext;}public function convEncIn($var=null,$restoreLocale=false,$unknown='_'){return(!$this->encoding)?$var:$this->convEnc($var,'UTF-8',$this->encoding,$this->options['locale'],$restoreLocale,$unknown);}public function convEncOut($var=null,$restoreLocale=true,$unknown='_'){return(!$this->encoding)?$var:$this->convEnc($var,$this->encoding,'UTF-8',$this->options['locale'],$restoreLocale,$unknown);}protected function convEnc($var,$from,$to,$locale,$restoreLocale,$unknown='_'){if(strtoupper($from)!==strtoupper($to)){if($locale){setlocale(LC_ALL,$locale);}if(is_array($var)){$_ret=array();foreach($var as$_k=>$_v){$_ret[$_k]=$this->convEnc($_v,$from,$to,'',false,$unknown='_');}$var=$_ret;}else{$_var=false;if(is_string($var)){$_var=$var;$errlev=error_reporting();error_reporting($errlev^E_NOTICE);if(false!==($_var=iconv($from,$to.'//TRANSLIT',$_var))){$_var=str_replace('?',$unknown,$_var);}error_reporting($errlev);}if($_var!==false){$var=$_var;}}if($restoreLocale){setlocale(LC_ALL,elFinder::$locale);}}return$var;}public function mimeTypeNormalize($type,$name,$ext=''){if($ext===''){$ext=(false===$pos=strrpos($name,'.'))?'':substr($name,$pos+1);}$_checkKey=strtolower($ext.':'.$type);if($type===''){$_keylen=strlen($_checkKey);foreach($this->options['mimeMap']as$_key=>$_type){if(substr($_key,0,$_keylen)===$_checkKey){$type=$_type;break;}}}elseif(isset($this->options['mimeMap'][$_checkKey])){$type=$this->options['mimeMap'][$_checkKey];}else{$_checkKey=strtolower($ext.':*');if(isset($this->options['mimeMap'][$_checkKey])){$type=$this->options['mimeMap'][$_checkKey];}else{$_checkKey=strtolower('*:'.$type);if(isset($this->options['mimeMap'][$_checkKey])){$type=$this->options['mimeMap'][$_checkKey];}}}return$type;}protected function getTempFile($path=''){static$cache=array();$key='';if($path!==''){$key=$this->id.'#'.$path;if(isset($cache[$key])){return$cache[$key];}}if($tmpdir=$this->getTempPath()){$name=tempnam($tmpdir,'ELF');if($key){$cache[$key]=$name;}$GLOBALS['elFinderTempFiles'][$name]=true;return$name;}return false;}protected function getWorkFile($path){if($wfp=$this->tmpfile()){if($fp=$this->_fopen($path)){while(!feof($fp)){fwrite($wfp,fread($fp,8192));}$info=stream_get_meta_data($wfp);fclose($wfp);if($info&&!empty($info['uri'])){return$info['uri'];}}}return false;}public function getImageSize($path,$mime=''){$size=false;if($mime===''||strtolower(substr($mime,0,5))==='image'){if($work=$this->getWorkFile($path)){if($size=getimagesize($work)){$size['dimensions']=$size[0].'x'.$size[1];$srcfp=fopen($work,'rb');$cArgs=elFinder::$currentArgs;if(!empty($cArgs['target'])&&$subImgLink=$this->getSubstituteImgLink($cArgs['target'],$size,$srcfp)){$size['url']=$subImgLink;}}}is_file($work)&&unlink($work);}return$size;}protected function delTree($localpath){foreach($this->_scandir($localpath)as $p){elFinder::checkAborted();$stat=$this->stat($this->convEncOut($p));$this->convEncIn();($stat['mime']==='directory')?$this->delTree($p):$this->_unlink($p);}$res=$this->_rmdir($localpath);$res&&$this->clearstatcache();return$res;}protected function getItemsInHand($hashes,$dir=null,$canLink=null){static$banChrs=null;static$totalSize=0;if(is_null($banChrs)){$banChrs=DIRECTORY_SEPARATOR!=='/'?array('\\','/',':','*','?','"','<','>','|'):array('\\','/');}if(is_null($dir)){$totalSize=0;if(!$tmpDir=$this->getTempPath()){return false;}$dir=tempnam($tmpDir,'elf');if(!unlink($dir)||!mkdir($dir,0700,true)){return false;}register_shutdown_function(array($this,'rmdirRecursive'),$dir);}if(is_null($canLink)){$canLink=($this instanceof elFinderVolumeLocalFileSystem);}elFinder::checkAborted();$res=true;$files=array();foreach($hashes as $hash){if(($file=$this->file($hash))==false){continue;}if(!$file['read']){continue;}$name=$file['name'];$name=preg_replace('/[[:cntrl:]]+/','',$name);$name=str_replace($banChrs,'_',$name);if(isset($files[$name])){$name=preg_replace('/^(.*?)(\..*)?$/','$1_'.$files[$name]++.'$2',$name);}else{$files[$name]=1;}$target=$dir.DIRECTORY_SEPARATOR.$name;if($file['mime']==='directory'){$chashes=array();$_files=$this->scandir($hash);foreach($_files as$_file){if($file['read']){$chashes[]=$_file['hash'];}}if(($res=mkdir($target,0700,true))&&$chashes){$res=$this->getItemsInHand($chashes,$target,$canLink);}if(!$res){break;}!empty($file['ts'])&&touch($target,$file['ts']);}else{$path=$this->decode($hash);if(!$canLink||!($canLink=$this->localFileSystemSymlink($path,$target))){if(file_exists($target)){unlink($target);}if($fp=$this->fopenCE($path)){if($tfp=fopen($target,'wb')){$totalSize+=stream_copy_to_stream($fp,$tfp);fclose($tfp);}!empty($file['ts'])&&touch($target,$file['ts']);$this->fcloseCE($fp,$path);}}else{$totalSize+=filesize($path);}if($this->options['maxArcFilesSize']>0&&$this->options['maxArcFilesSize']<$totalSize){$res=$this->setError(elFinder::ERROR_ARC_MAXSIZE);}}}return $res?$dir:false;}protected function attr($path,$name,$val=null,$isDir=null){if(!isset($this->defaults[$name])){return false;}$relpath=$this->relpathCE($path);if($this->separator!=='/'){$relpath=str_replace($this->separator,'/',$relpath);}$relpath='/'.$relpath;$perm=null;if($this->access){$perm=call_user_func($this->access,$name,$path,$this->options['accessControlData'],$this,$isDir,$relpath);if($perm!==null){return!!$perm;}}foreach($this->attributes as$attrs){if(isset($attrs[$name])&&isset($attrs['pattern'])&&preg_match($attrs['pattern'],$relpath)){$perm=$attrs[$name];break;}}return $perm===null?(is_null($val)?$this->defaults[$name]:$val):!!$perm;}protected function allowCreate($dir,$name,$isDir=null){return$this->attr($this->joinPathCE($dir,$name),'write',true,$isDir);}protected function allowPutMime($mime){$allow=$this->mimeAccepted($mime,$this->uploadAllow,null);$deny=$this->mimeAccepted($mime,$this->uploadDeny,null);if(strtolower($this->uploadOrder[0])=='allow'){$res=false;if(!$deny&&($allow===true)){$res=true;}}else{$res=true;if(($deny===true)&&!$allow){$res=false;}}return$res;}protected function stat($path){if($path===false||is_null($path)){return false;}$is_root=($path==$this->root);if($is_root){$rootKey=$this->getRootstatCachekey();if($this->sessionCaching['rootstat']&&!isset($this->sessionCache['rootstat'])){$this->sessionCache['rootstat']=array();}if(!isset($this->cache[$path])&&!$this->isMyReload()){if($this->sessionCaching['rootstat']&&isset($this->sessionCache['rootstat'][$rootKey])){if($ret=$this->sessionCache['rootstat'][$rootKey]){if($this->options['rootRev']===$ret['rootRev']){if(isset($this->options['phash'])){$ret['isroot']=1;$ret['phash']=$this->options['phash'];}return$ret;}}}}}$rootSessCache=false;if(isset($this->cache[$path])){$ret=$this->cache[$path];}else{if($is_root&&!empty($this->options['rapidRootStat'])&&is_array($this->options['rapidRootStat'])&&!$this->needOnline){$ret=$this->updateCache($path,$this->options['rapidRootStat'],true);}else{$ret=$this->updateCache($path,$this->convEncOut($this->_stat($this->convEncIn($path))),true);if($is_root&&!empty($rootKey)&&$this->sessionCaching['rootstat']){$rootSessCache=true;}}}if($is_root){if($ret){$this->rootModified=false;if($rootSessCache){$this->sessionCache['rootstat'][$rootKey]=$ret;}if(isset($this->options['phash'])){$ret['isroot']=1;$ret['phash']=$this->options['phash'];}}elseif(!empty($rootKey)&&$this->sessionCaching['rootstat']){unset($this->sessionCache['rootstat'][$rootKey]);}}return$ret;}protected function getRootStatExtra(){$stat=array();if($this->rootName){$stat['name']=$this->rootName;}$stat['rootRev']=$this->options['rootRev'];$stat['options']=$this->options(null);return$stat;}protected function isNameExists($path){return$this->stat($path);}protected function updateCache($path,$stat){if(empty($stat)||!is_array($stat)){return$this->cache[$path]=array();}if(func_num_args()>2){$fromStat=func_get_arg(2);}else{$fromStat=false;}$stat['hash']=$this->encode($path);$root=$path==$this->root;$parent='';if($root){$stat=array_merge($stat,$this->getRootStatExtra());}else{if(!isset($stat['name'])||$stat['name']===''){$stat['name']=$this->basenameCE($path);}if(empty($stat['phash'])){$parent=$this->dirnameCE($path);$stat['phash']=$this->encode($parent);}else{$parent=$this->decode($stat['phash']);}}if(isset($stat['name'])&&!$jeName=json_encode($stat['name'])){return$this->cache[$path]=array();}if($this->options['utf8fix']&&$this->options['utf8patterns']&&$this->options['utf8replace']){$stat['name']=json_decode(str_replace($this->options['utf8patterns'],$this->options['utf8replace'],$jeName));}if(!isset($stat['size'])){$stat['size']='unknown';}$mime=isset($stat['mime'])?$stat['mime']:'';if($isDir=($mime==='directory')){$stat['volumeid']=$this->id;}else{if(empty($stat['mime'])||$stat['size']==0){$stat['mime']=$this->mimetype($stat['name'],true,$stat['size'],$mime);}else{$stat['mime']=$this->mimeTypeNormalize($stat['mime'],$stat['name']);}}$stat['read']=intval($this->attr($path,'read',isset($stat['read'])?!!$stat['read']:null,$isDir));$stat['write']=intval($this->attr($path,'write',isset($stat['write'])?!!$stat['write']:null,$isDir));if($root){$stat['locked']=1;if($this->options['type']!==''){$stat['type']=$this->options['type'];}}else{if(!isset($stat['locked'])){$pstat=$this->stat($parent);if(isset($pstat['write'])&&!$pstat['write']){$stat['locked']=true;}}if($this->attr($path,'locked',isset($stat['locked'])?!!$stat['locked']:null,$isDir)){$stat['locked']=1;}else{unset($stat['locked']);}}if($root){unset($stat['hidden']);}elseif($this->attr($path,'hidden',isset($stat['hidden'])?!!$stat['hidden']:null,$isDir)||!$this->mimeAccepted($stat['mime'])){$stat['hidden']=1;}else{unset($stat['hidden']);}if($stat['read']&&empty($stat['hidden'])){if($isDir){if($parent){$this->updateSubdirsCache($parent,true);}if($this->options['checkSubfolders']){if(!isset($stat['dirs'])&&intval($this->options['checkSubfolders'])===-1){$stat['dirs']=-1;}if(isset($stat['dirs'])){if($stat['dirs']){if($stat['dirs']==-1){$stat['dirs']=($this->sessionCaching['subdirs']&&isset($this->sessionCache['subdirs'][$path]))?(int)$this->sessionCache['subdirs'][$path]:-1;}else{$stat['dirs']=1;}}else{unset($stat['dirs']);}}elseif(!empty($stat['alias'])&&!empty($stat['target'])){$stat['dirs']=isset($this->cache[$stat['target']])?intval(isset($this->cache[$stat['target']]['dirs'])):$this->subdirsCE($stat['target']);}elseif($this->subdirsCE($path)){$stat['dirs']=1;}}else{$stat['dirs']=1;}if($this->options['dirUrlOwn']===true){$stat['url']=null;}elseif($this->options['dirUrlOwn']==='hide'){$stat['url']='';}}else{$p=isset($stat['target'])?$stat['target']:$path;if($this->tmbURL&&!isset($stat['tmb'])&&$this->canCreateTmb($p,$stat)){$tmb=$this->gettmb($p,$stat);$stat['tmb']=$tmb?$tmb:1;}}if(!isset($stat['url'])&&$this->URL&&$this->encoding){$_path=str_replace($this->separator,'/',substr($path,strlen($this->root)+1));$stat['url']=rtrim($this->URL,'/').'/'.str_replace('%2F','/',rawurlencode((substr(PHP_OS,0,3)==='WIN')?$_path:$this->convEncIn($_path,true)));}}else{if($isDir){unset($stat['dirs']);}}if(!empty($stat['alias'])&&!empty($stat['target'])){$stat['thash']=$this->encode($stat['target']);unset($stat['target']);}$this->cache[$path]=$stat;if(!$fromStat&&$root&&$this->sessionCaching['rootstat']){$this->stat($path);}return$stat;}protected function cacheDir($path){$this->dirsCache[$path]=array();$hasDir=false;foreach($this->scandirCE($path)as$p){if(($stat=$this->stat($p))&&empty($stat['hidden'])){if(!$hasDir&&$stat['mime']==='directory'){$hasDir=true;}$this->dirsCache[$path][]=$p;}}$this->updateSubdirsCache($path,$hasDir);}protected function clearcache(){$this->cache=$this->dirsCache=array();}protected function mimetype($path,$name='',$size=null,$mime=null){$type='';$nameCheck=false;if($name===''){$name=$path;}elseif($name===true){$name=$path;$nameCheck=true;}if(!$this instanceof elFinderVolumeLocalFileSystem){$nameCheck=true;}$ext=(false===$pos=strrpos($name,'.'))?'':strtolower(substr($name,$pos+1));if(!$nameCheck&&$size===null){$size=file_exists($path)?filesize($path):-1;}if(!$nameCheck&&is_readable($path)&&$size>0){if($this->mimeDetect==='finfo'){$type=finfo_file($this->finfo,$path);}elseif($this->mimeDetect==='mime_content_type'){$type=mime_content_type($path);}if($type){$type=explode(';',$type);$type=trim($type[0]);if($ext&&preg_match('~^application/(?:octet-stream|(?:x-)?zip|xml)$~',$type)){if(!elFinderVolumeDriver::$mimetypesLoaded){elFinderVolumeDriver::loadMimeTypes();}if(isset(elFinderVolumeDriver::$mimetypes[$ext])){$type=elFinderVolumeDriver::$mimetypes[$ext];}}elseif($ext==='js'&&preg_match('~^text/~',$type)){$type='text/javascript';}}}if(!$type){$type=elFinderVolumeDriver::mimetypeInternalDetect($name);if($type==='unknown'){if($mime){$type=$mime;}else{$type=($size==0)?'text/plain':$this->options['mimeTypeUnknown'];}}}$type=$this->mimeTypeNormalize($type,$name,$ext);return$type;}static protected function loadMimeTypes($mimeTypesFile=''){if(!elFinderVolumeDriver::$mimetypesLoaded){elFinderVolumeDriver::$mimetypesLoaded=true;$file=false;if(!empty($mimeTypesFile)&&file_exists($mimeTypesFile)){$file=$mimeTypesFile;}elseif(elFinder::$defaultMimefile&&file_exists(elFinder::$defaultMimefile)){$file=elFinder::$defaultMimefile;}elseif(file_exists(dirname(__FILE__).DIRECTORY_SEPARATOR.'mime.types')){$file=dirname(__FILE__).DIRECTORY_SEPARATOR.'mime.types';}elseif(file_exists(dirname(dirname(__FILE__)).DIRECTORY_SEPARATOR.'mime.types')){$file=dirname(dirname(__FILE__)).DIRECTORY_SEPARATOR.'mime.types';}if($file&&file_exists($file)){$mimecf=file($file);foreach($mimecf as$line_num=>$line){if(!preg_match('/^\s*#/',$line)){$mime=preg_split('/\s+/',$line,-1,PREG_SPLIT_NO_EMPTY);for($i=1,$size=count($mime);$i<$size;$i++){if(!isset(self::$mimetypes[$mime[$i]])){self::$mimetypes[$mime[$i]]=$mime[0];}}}}}}}static protected function mimetypeInternalDetect($path=''){if(!elFinderVolumeDriver::$mimetypesLoaded){elFinderVolumeDriver::loadMimeTypes();}$ext='';if($path){$pinfo=pathinfo($path);$ext=isset($pinfo['extension'])?strtolower($pinfo['extension']):'';}return($ext&&isset(elFinderVolumeDriver::$mimetypes[$ext]))?elFinderVolumeDriver::$mimetypes[$ext]:'unknown';}protected function countSize($path){elFinder::checkAborted();$result=array('size'=>0,'files'=>0,'dirs'=>0);$stat=$this->stat($path);if(empty($stat)||!$stat['read']||!empty($stat['hidden'])){$result['size']='unknown';return$result;}if($stat['mime']!=='directory'){$result['size']=intval($stat['size']);$result['files']=1;return$result;}$result['dirs']=1;$subdirs=$this->options['checkSubfolders'];$this->options['checkSubfolders']=true;foreach($this->getScandir($path)as$stat){if($isDir=($stat['mime']==='directory'&&$stat['read'])){++$result['dirs'];}else{++$result['files'];}$res=$isDir?$this->countSize($this->decode($stat['hash'])):(isset($stat['size'])?array('size'=>intval($stat['size'])):array());if(!empty($res['size'])&&is_numeric($res['size'])){$result['size']+=$res['size'];}if(!empty($res['files'])&&is_numeric($res['files'])){$result['files']+=$res['files'];}if(!empty($res['dirs'])&&is_numeric($res['dirs'])){$result['dirs']+=$res['dirs'];--$result['dirs'];}}$this->options['checkSubfolders']=$subdirs;return$result;}protected function isSameType($mime1,$mime2){return($mime1=='directory'&&$mime1==$mime2)||($mime1!='directory'&&$mime2!='directory');}protected function closestByAttr($path,$attr,$val){$stat=$this->stat($path);if(empty($stat)){return false;}$v=isset($stat[$attr])?$stat[$attr]:false;if($v==$val){return $path;}return $stat['mime']=='directory'?$this->childsByAttr($path,$attr,$val):false;}protected function childsByAttr($path,$attr,$val){foreach($this->scandirCE($path)as $p){if(($_p=$this->closestByAttr($p,$attr,$val))!=false){return$_p;}}return false;}protected function isMyReload($target='',$ARGtarget=''){if($this->rootModified||(!empty($this->ARGS['cmd'])&&$this->ARGS['cmd']==='parents')){return true;}if(!empty($this->ARGS['reload'])){if($ARGtarget===''){$ARGtarget=isset($this->ARGS['target'])?$this->ARGS['target']:((isset($this->ARGS['targets'])&&is_array($this->ARGS['targets'])&&count($this->ARGS['targets'])===1)?$this->ARGS['targets'][0]:'');}if($ARGtarget!==''){$ARGtarget=strval($ARGtarget);if($target===''){return(strpos($ARGtarget,$this->id)===0);}else{$target=strval($target);return($target===$ARGtarget);}}}return false;}protected function updateSubdirsCache($path,$subdirs){if(isset($this->cache[$path])){if($subdirs){$this->cache[$path]['dirs']=1;}else{unset($this->cache[$path]['dirs']);}}if($this->sessionCaching['subdirs']){$this->sessionCache['subdirs'][$path]=$subdirs;}if($this->sessionCaching['rootstat']&&$path==$this->root){unset($this->sessionCache['rootstat'][$this->getRootstatCachekey()]);}}protected function getScandir($path){$files=array();!isset($this->dirsCache[$path])&&$this->cacheDir($path);foreach($this->dirsCache[$path]as$p){if(($stat=$this->stat($p))&&empty($stat['hidden'])){$files[]=$stat;}}return$files;}protected function gettree($path,$deep,$exclude=''){$dirs=array();!isset($this->dirsCache[$path])&&$this->cacheDir($path);foreach($this->dirsCache[$path]as$p){$stat=$this->stat($p);if($stat&&empty($stat['hidden'])&&$p!=$exclude&&$stat['mime']=='directory'){$dirs[]=$stat;if($deep>0&&!empty($stat['dirs'])){$dirs=array_merge($dirs,$this->gettree($p,$deep-1));}}}return$dirs;}protected function doSearch($path,$q,$mimes){$result=array();$matchMethod=empty($this->doSearchCurrentQuery['matchMethod'])?'searchMatchName':$this->doSearchCurrentQuery['matchMethod'];$timeout=$this->options['searchTimeout']?$this->searchStart+$this->options['searchTimeout']:0;if($timeout&&$timeout<time()){$this->setError(elFinder::ERROR_SEARCH_TIMEOUT,$this->path($this->encode($path)));return$result;}foreach($this->scandirCE($path)as $p){elFinder::extendTimeLimit($this->options['searchTimeout']+30);if($timeout&&($this->error||$timeout<time())){!$this->error&&$this->setError(elFinder::ERROR_SEARCH_TIMEOUT,$this->path($this->encode($path)));break;}$stat=$this->stat($p);if(!$stat){continue;}if(!empty($stat['hidden'])||!$this->mimeAccepted($stat['mime'],$mimes)){continue;}$name=$stat['name'];if($this->doSearchCurrentQuery['excludes']){foreach($this->doSearchCurrentQuery['excludes']as$exclude){if($this->stripos($name,$exclude)!==false){continue 2;}}}if((!$mimes||$stat['mime']!=='directory')&&$this->$matchMethod($name,$q,$p)!==false){$stat['path']=$this->path($stat['hash']);if($this->URL&&!isset($stat['url'])){$path=str_replace($this->separator,'/',substr($p,strlen($this->root)+1));if($this->encoding){$path=str_replace('%2F','/',rawurlencode($this->convEncIn($path,true)));}else{$path=str_replace('%2F','/',rawurlencode($path));}$stat['url']=$this->URL.$path;}$result[]=$stat;}if($stat['mime']=='directory'&&$stat['read']&&!isset($stat['alias'])){if(!$this->options['searchExDirReg']||!preg_match($this->options['searchExDirReg'],$p)){$result=array_merge($result,$this->doSearch($p,$q,$mimes));}}}return$result;}protected function copy($src,$dst,$name){elFinder::checkAborted();$srcStat=$this->stat($src);if(!empty($srcStat['thash'])){$target=$this->decode($srcStat['thash']);if(!$this->inpathCE($target,$this->root)){return$this->setError(elFinder::ERROR_COPY,$this->path($srcStat['hash']),elFinder::ERROR_MKOUTLINK);}$stat=$this->stat($target);$this->clearcache();return$stat&&$this->symlinkCE($target,$dst,$name)?$this->joinPathCE($dst,$name):$this->setError(elFinder::ERROR_COPY,$this->path($srcStat['hash']));}if($srcStat['mime']==='directory'){$testStat=$this->isNameExists($this->joinPathCE($dst,$name));$this->clearcache();if(($testStat&&$testStat['mime']!=='directory')||(!$testStat&&!$testStat=$this->mkdir($this->encode($dst),$name))){return$this->setError(elFinder::ERROR_COPY,$this->path($srcStat['hash']));}$dst=$this->decode($testStat['hash']);$stime=microtime(true);foreach($this->getScandir($src)as$stat){if(empty($stat['hidden'])){$ctime=microtime(true);if(($ctime-$stime)>2){$stime=$ctime;elFinder::checkAborted();}$name=$stat['name'];$_src=$this->decode($stat['hash']);if(!$this->copy($_src,$dst,$name)){$this->remove($dst,true);return$this->setError($this->error,elFinder::ERROR_COPY,$this->_path($src));}}}$this->added[]=$testStat;return $dst;}if($this->options['copyJoin']){$test=$this->joinPathCE($dst,$name);if($this->isNameExists($test)){$this->remove($test);}}if($res=$this->convEncOut($this->_copy($this->convEncIn($src),$this->convEncIn($dst),$this->convEncIn($name)))){$path=is_string($res)?$res:$this->joinPathCE($dst,$name);$this->clearstatcache();$this->added[]=$this->stat($path);return$path;}return$this->setError(elFinder::ERROR_COPY,$this->path($srcStat['hash']));}protected function move($src,$dst,$name){$stat=$this->stat($src);$stat['realpath']=$src;$this->rmTmb($stat);$this->clearcache();if($res=$this->convEncOut($this->_move($this->convEncIn($src),$this->convEncIn($dst),$this->convEncIn($name)))){$this->clearstatcache();if($stat['mime']==='directory'){$this->updateSubdirsCache($dst,true);}$path=is_string($res)?$res:$this->joinPathCE($dst,$name);$this->added[]=$this->stat($path);$this->removed[]=$stat;return $path;}return$this->setError(elFinder::ERROR_MOVE,$this->path($stat['hash']));}protected function copyFrom($volume,$src,$destination,$name){elFinder::checkAborted();if(($source=$volume->file($src))==false){return$this->addError(elFinder::ERROR_COPY,'#'.$src,$volume->error());}$srcIsDir=($source['mime']==='directory');$errpath=$volume->path($source['hash']);$errors=array();try{$thash=$this->encode($destination);elFinder::$instance->trigger('paste.copyfrom',array(&$thash,&$name,'',elFinder::$instance,$this),$errors);}catch(elFinderTriggerException $e){return$this->addError(elFinder::ERROR_COPY,$name,$errors);}if(!$this->nameAccepted($name,$srcIsDir)){return$this->addError(elFinder::ERROR_COPY,$name,$srcIsDir?elFinder::ERROR_INVALID_DIRNAME:elFinder::ERROR_INVALID_NAME);}if(!$this->allowCreate($destination,$name,$srcIsDir)){return$this->addError(elFinder::ERROR_COPY,$name,elFinder::ERROR_PERM_DENIED);}if(!$source['read']){return$this->addError(elFinder::ERROR_COPY,$errpath,elFinder::ERROR_PERM_DENIED);}if($srcIsDir){$test=$this->isNameExists($this->joinPathCE($destination,$name));$this->clearcache();if(($test&&$test['mime']!='directory')||(!$test&&!$test=$this->mkdir($this->encode($destination),$name))){return$this->addError(elFinder::ERROR_COPY,$errpath);}$path=$this->decode($test['hash']);foreach($volume->scandir($src)as$entr){$this->copyFrom($volume,$entr['hash'],$path,$entr['name']);}$this->added[]=$test;}else{if(!isset($source['size'])||$source['size']>$this->uploadMaxSize){return$this->setError(elFinder::ERROR_UPLOAD_FILE_SIZE);}$mimeByName=$this->mimetype($source['name'],true);if($source['mime']===$mimeByName){$mimeByName='';}if(!$this->allowPutMime($source['mime'])||($mimeByName&&!$this->allowPutMime($mimeByName))){return$this->addError(elFinder::ERROR_UPLOAD_FILE_MIME,$errpath);}if(strpos($source['mime'],'image')===0&&($dim=$volume->dimensions($src))){if(is_array($dim)){$dim=isset($dim['dim'])?$dim['dim']:null;}if($dim){$s=explode('x',$dim);$source['width']=$s[0];$source['height']=$s[1];}}if(($fp=$volume->open($src))==false||($path=$this->saveCE($fp,$destination,$name,$source))==false){$fp&&$volume->close($fp,$src);return$this->addError(elFinder::ERROR_COPY,$errpath);}$volume->close($fp,$src);$this->added[]=$this->stat($path);}return$path;}protected function remove($path,$force=false){$stat=$this->stat($path);if(empty($stat)){return$this->setError(elFinder::ERROR_RM,$path,elFinder::ERROR_FILE_NOT_FOUND);}$stat['realpath']=$path;$this->rmTmb($stat);$this->clearcache();if(!$force&&!empty($stat['locked'])){return $this->setError(elFinder::ERROR_LOCKED,$this->path($stat['hash']));}if($stat['mime']=='directory'&&empty($stat['thash'])){$ret=$this->delTree($this->convEncIn($path));$this->convEncOut();if(!$ret){return$this->setError(elFinder::ERROR_RM,$this->path($stat['hash']));}}else{if($this->convEncOut(!$this->_unlink($this->convEncIn($path)))){return $this->setError(elFinder::ERROR_RM,$this->path($stat['hash']));}$this->clearstatcache();}$this->removed[]=$stat;return true;}protected function tmbname($stat){$name=$stat['hash'].(isset($stat['ts'])?$stat['ts']:'').'.png';if(strlen($name)>255){$name=$this->id.md5($stat['hash']).$stat['ts'].'.png';}return current(explode('.',$stat['name'])).'.png';}protected function gettmb($path,$stat){if($this->tmbURL&&$this->tmbPath){if(strpos($path,$this->tmbPath)===0){return basename($path);}$name=$this->tmbname($stat);$tmb=$this->tmbPath.DIRECTORY_SEPARATOR.$name;if(file_exists($tmb)){if($this->options['tmbGcMaxlifeHour']&&$this->options['tmbGcPercentage']>0){touch($tmb);}return $name;}}return false;}protected function canCreateTmb($path,$stat,$checkTmbPath=true){static $gdMimes=null;static $imgmgPS=null;if($gdMimes===null){$gdMimes=array_flip(array('image/jpeg','image/png','image/gif','image/x-ms-bmp'));$imgmgPS=array_flip(array('application/postscript','application/pdf'));}if((!$checkTmbPath||$this->tmbPathWritable)&&(!$this->tmbPath||strpos($path,$this->tmbPath)===false)){$mime=strtolower($stat['mime']);list($type)=explode('/',$mime);if(!empty($this->imgConverter)){if(isset($this->imgConverter[$mime])){return true;}if(isset($this->imgConverter[$type])){return true;}}return$this->imgLib&&(($type==='image'&&($this->imgLib==='gd'?isset($gdMimes[$stat['mime']]):true))||(ELFINDER_IMAGEMAGICK_PS&&isset($imgmgPS[$stat['mime']])&&$this->imgLib!=='gd'));}return false;}protected function canResize($path,$stat){return$this->canCreateTmb($path,$stat,false);}protected function createTmb($path,$stat){if(!$stat||!$this->canCreateTmb($path,$stat)){return false;}$name=$this->tmbname($stat);$tmb=$this->tmbPath.DIRECTORY_SEPARATOR.$name;$maxlength=-1;$imgConverter=null;$mime=strtolower($stat['mime']);list($type)=explode('/',$mime);if(isset($this->imgConverter[$mime])){$imgConverter=$this->imgConverter[$mime]['func'];if(!empty($this->imgConverter[$mime]['maxlen'])){$maxlength=intval($this->imgConverter[$mime]['maxlen']);}}elseif(isset($this->imgConverter[$type])){$imgConverter=$this->imgConverter[$type]['func'];if(!empty($this->imgConverter[$type]['maxlen'])){$maxlength=intval($this->imgConverter[$type]['maxlen']);}}if($imgConverter&&!is_callable($imgConverter)){return false;}if(($src=$this->fopenCE($path,'rb'))==false){return false;}if(($trg=fopen($tmb,'wb'))==false){$this->fcloseCE($src,$path);return false;}stream_copy_to_stream($src,$trg,$maxlength);$this->fcloseCE($src,$path);fclose($trg);if($imgConverter){if(!call_user_func_array($imgConverter,array($tmb,$stat,$this))){file_exists($tmb)&&unlink($tmb);return false;}}$result=false;$tmbSize=$this->tmbSize;if($this->imgLib==='imagick'){try{$imagickTest=new imagick($tmb.'[0]');$imagickTest->clear();$imagickTest=true;}catch(Exception$e){$imagickTest=false;}}if(($this->imgLib==='imagick'&&!$imagickTest)||($s=getimagesize($tmb))===false){if($this->imgLib==='imagick'){$bgcolor=$this->options['tmbBgColor'];if($bgcolor==='transparent'){$bgcolor='rgba(255,255,255,0)';}try{$imagick=new imagick();$imagick->setBackgroundColor(new ImagickPixel($bgcolor));$imagick->readImage($this->getExtentionByMime($stat['mime'],':').$tmb.'[0]');try{$imagick->trimImage(0);}catch(Exception $e){}$imagick->setImageFormat('png');$imagick->writeImage($tmb);$imagick->clear();if(($s=getimagesize($tmb))!==false){$result=true;}}catch(Exception $e){}}elseif($this->imgLib==='convert'){$convParams=$this->imageMagickConvertPrepare($tmb,'png',100,array(),$stat['mime']);$cmd=sprintf('%s -colorspace sRGB -trim -- %s %s',ELFINDER_CONVERT_PATH,$convParams['quotedPath'],$convParams['quotedDstPath']);$result=false;if($this->procExec($cmd)===0){if(($s=getimagesize($tmb))!==false){$result=true;}}}if(!$result){if(function_exists('gd_info')&&($s=getimagesize($tmb))){$this->imgLib='gd';}else{file_exists($tmb)&&unlink($tmb);return false;}}}if($s[0]<=$tmbSize&&$s[1]<=$tmbSize){$result=$this->imgSquareFit($tmb,$tmbSize,$tmbSize,'center','middle',$this->options['tmbBgColor'],'png');}else{if($this->options['tmbCrop']){$result=$tmb;if(!(($s[0]>$tmbSize&&$s[1]<=$tmbSize)||($s[0]<=$tmbSize&&$s[1]>$tmbSize))||($s[0]>$tmbSize&&$s[1]>$tmbSize)){$result=$this->imgResize($tmb,$tmbSize,$tmbSize,true,false,'png');}if($result&&($s=getimagesize($tmb))!=false){$x=$s[0]>$tmbSize?intval(($s[0]-$tmbSize)/2):0;$y=$s[1]>$tmbSize?intval(($s[1]-$tmbSize)/2):0;$result=$this->imgCrop($result,$tmbSize,$tmbSize,$x,$y,'png');}else{$result=false;}}else{$result=$this->imgResize($tmb,$tmbSize,$tmbSize,true,true,'png');}if($result){if($s=getimagesize($tmb)){if($s[0]!==$tmbSize||$s[1]!==$tmbSize){$result=$this->imgSquareFit($result,$tmbSize,$tmbSize,'center','middle',$this->options['tmbBgColor'],'png');}}}}if(!$result){unlink($tmb);return false;}return$name;}protected function imgResize($path,$width,$height,$keepProportions=false,$resizeByBiggerSide=true,$destformat=null,$jpgQuality=null,$options=array()){if(($s=getimagesize($path))==false){return false;}if(!$jpgQuality){$jpgQuality=$this->options['jpgQuality'];}list($orig_w,$orig_h)=array($s[0],$s[1]);list($size_w,$size_h)=array($width,$height);if(empty($options['unenlarge'])||$orig_w>$size_w||$orig_h>$size_h){if($keepProportions==true){if($resizeByBiggerSide){if($orig_w>$orig_h){$size_h=round($orig_h*$width/$orig_w);$size_w=$width;}else{$size_w=round($orig_w*$height/$orig_h);$size_h=$height;}}else{if($orig_w>$orig_h){$size_w=round($orig_w*$height/$orig_h);$size_h=$height;}else{$size_h=round($orig_h*$width/$orig_w);$size_w=$width;}}}}else{$size_w=$orig_w;$size_h=$orig_h;}elFinder::extendTimeLimit(300);switch($this->imgLib){case'imagick':try{$img=new imagick($path);}catch(Exception$e){return false;}$filter=($destformat==='png')?Imagick::FILTER_BOX:Imagick::FILTER_LANCZOS;$ani=($img->getNumberImages()>1);if($ani&&is_null($destformat)){$img=$img->coalesceImages();do{$img->resizeImage($size_w,$size_h,$filter,1);}while($img->nextImage());$img->optimizeImageLayers();$result=$img->writeImages($path,true);}else{if($ani){$img->setFirstIterator();}if(strtoupper($img->getImageFormat())==='JPEG'){$img->setImageCompression(imagick::COMPRESSION_JPEG);$img->setImageCompressionQuality($jpgQuality);if(isset($options['preserveExif'])&&!$options['preserveExif']){try{$orientation=$img->getImageOrientation();}catch(ImagickException$e){$orientation=0;}$img->stripImage();if($orientation){$img->setImageOrientation($orientation);}}if($this->options['jpgProgressive']){$img->setInterlaceScheme(Imagick::INTERLACE_PLANE);}}$img->resizeImage($size_w,$size_h,$filter,true);if($destformat){$result=$this->imagickImage($img,$path,$destformat,$jpgQuality);}else{$result=$img->writeImage($path);}}$img->clear();return$result?$path:false;break;case'convert':extract($this->imageMagickConvertPrepare($path,$destformat,$jpgQuality,$s));$filter=($destformat==='png')?'-filter Box':'-filter Lanczos';$strip=(isset($options['preserveExif'])&&!$options['preserveExif'])?' -strip':'';$cmd=sprintf('%s %s%s%s%s%s %s -geometry %dx%d! %s %s',ELFINDER_CONVERT_PATH,$quotedPath,$coalesce,$jpgQuality,$strip,$interlace,$filter,$size_w,$size_h,$deconstruct,$quotedDstPath);$result=false;if($this->procExec($cmd)===0){$result=true;}return$result?$path:false;break;case'gd':elFinder::expandMemoryForGD(array($s,array($size_w,$size_h)));$img=$this->gdImageCreate($path,$s['mime']);if($img&&false!=($tmp=imagecreatetruecolor($size_w,$size_h))){$bgNum=false;if($s[2]===IMAGETYPE_GIF&&(!$destformat||$destformat==='gif')){$bgIdx=imagecolortransparent($img);if($bgIdx!==-1){$c=imagecolorsforindex($img,$bgIdx);$bgNum=imagecolorallocate($tmp,$c['red'],$c['green'],$c['blue']);imagefill($tmp,0,0,$bgNum);imagecolortransparent($tmp,$bgNum);}}if($bgNum===false){$this->gdImageBackground($tmp,'transparent');}if(!imagecopyresampled($tmp,$img,0,0,0,0,$size_w,$size_h,$s[0],$s[1])){return false;}$result=$this->gdImage($tmp,$path,$destformat,$s['mime'],$jpgQuality);imagedestroy($img);imagedestroy($tmp);return$result?$path:false;}break;}return false;}protected function imgCrop($path,$width,$height,$x,$y,$destformat=null,$jpgQuality=null){if(($s=getimagesize($path))==false){return false;}if(!$jpgQuality){$jpgQuality=$this->options['jpgQuality'];}elFinder::extendTimeLimit(300);switch($this->imgLib){case'imagick':try{$img=new imagick($path);}catch(Exception $e){return false;}$ani=($img->getNumberImages()>1);if($ani&&is_null($destformat)){$img=$img->coalesceImages();do{$img->setImagePage($s[0],$s[1],0,0);$img->cropImage($width,$height,$x,$y);$img->setImagePage($width,$height,0,0);}while($img->nextImage());$img->optimizeImageLayers();$result=$img->writeImages($path,true);}else{if($ani){$img->setFirstIterator();}$img->setImagePage($s[0],$s[1],0,0);$img->cropImage($width,$height,$x,$y);$img->setImagePage($width,$height,0,0);$result=$this->imagickImage($img,$path,$destformat,$jpgQuality);}$img->clear();return$result?$path:false;break;case'convert':extract($this->imageMagickConvertPrepare($path,$destformat,$jpgQuality,$s));$cmd=sprintf('%s %s%s%s%s -crop %dx%d+%d+%d%s %s',ELFINDER_CONVERT_PATH,$quotedPath,$coalesce,$jpgQuality,$interlace,$width,$height,$x,$y,$deconstruct,$quotedDstPath);$result=false;if($this->procExec($cmd)===0){$result=true;}return$result?$path:false;break;case'gd':elFinder::expandMemoryForGD(array($s,array($width,$height)));$img=$this->gdImageCreate($path,$s['mime']);if($img&&false!=($tmp=imagecreatetruecolor($width,$height))){$bgNum=false;if($s[2]===IMAGETYPE_GIF&&(!$destformat||$destformat==='gif')){$bgIdx=imagecolortransparent($img);if($bgIdx!==-1){$c=imagecolorsforindex($img,$bgIdx);$bgNum=imagecolorallocate($tmp,$c['red'],$c['green'],$c['blue']);imagefill($tmp,0,0,$bgNum);imagecolortransparent($tmp,$bgNum);}}if($bgNum===false){$this->gdImageBackground($tmp,'transparent');}$size_w=$width;$size_h=$height;if($s[0]<$width||$s[1]<$height){$size_w=$s[0];$size_h=$s[1];}if(!imagecopy($tmp,$img,0,0,$x,$y,$size_w,$size_h)){return false;}$result=$this->gdImage($tmp,$path,$destformat,$s['mime'],$jpgQuality);imagedestroy($img);imagedestroy($tmp);return$result?$path:false;}break;}return false;}protected function imgSquareFit($path,$width,$height,$align='center',$valign='middle',$bgcolor='#0000ff',$destformat=null,$jpgQuality=null){if(($s=getimagesize($path))==false){return false;}$result=false;$y=ceil(abs($height-$s[1])/2);$x=ceil(abs($width-$s[0])/2);if(!$jpgQuality){$jpgQuality=$this->options['jpgQuality'];}elFinder::extendTimeLimit(300);switch($this->imgLib){case 'imagick':try{$img=new imagick($path);}catch(Exception$e){return false;}if($bgcolor==='transparent'){$bgcolor='rgba(255,255,255,0)';}$ani=($img->getNumberImages()>1);if($ani&&is_null($destformat)){$img1=new Imagick();$img1->setFormat('gif');$img=$img->coalesceImages();do{$gif=new Imagick();$gif->newImage($width,$height,new ImagickPixel($bgcolor));$gif->setImageColorspace($img->getImageColorspace());$gif->setImageFormat('gif');$gif->compositeImage($img,imagick::COMPOSITE_OVER,$x,$y);$gif->setImageDelay($img->getImageDelay());$gif->setImageIterations($img->getImageIterations());$img1->addImage($gif);$gif->clear();}while($img->nextImage());$img1->optimizeImageLayers();$result=$img1->writeImages($path,true);}else{if($ani){$img->setFirstIterator();}$img1=new Imagick();$img1->newImage($width,$height,new ImagickPixel($bgcolor));$img1->setImageColorspace($img->getImageColorspace());$img1->compositeImage($img,imagick::COMPOSITE_OVER,$x,$y);$result=$this->imagickImage($img1,$path,$destformat,$jpgQuality);}$img1->clear();$img->clear();return$result?$path:false;break;case'convert':extract($this->imageMagickConvertPrepare($path,$destformat,$jpgQuality,$s));if($bgcolor==='transparent'){$bgcolor='rgba(255,255,255,0)';}$cmd=sprintf('%s -size %dx%d "xc:%s" png:- | convert%s%s%s png:- %s -geometry +%d+%d -compose over -composite%s %s',ELFINDER_CONVERT_PATH,$width,$height,$bgcolor,$coalesce,$jpgQuality,$interlace,$quotedPath,$x,$y,$deconstruct,$quotedDstPath);$result=false;if($this->procExec($cmd)===0){$result=true;}return$result?$path:false;break;case'gd':elFinder::expandMemoryForGD(array($s,array($width,$height)));$img=$this->gdImageCreate($path,$s['mime']);if($img&&false!=($tmp=imagecreatetruecolor($width,$height))){$this->gdImageBackground($tmp,$bgcolor);if($bgcolor==='transparent'&&($destformat==='png'||$s[2]===IMAGETYPE_PNG)){$bgNum=imagecolorallocatealpha($tmp,255,255,255,127);imagefill($tmp,0,0,$bgNum);}if(!imagecopy($tmp,$img,$x,$y,0,0,$s[0],$s[1])){return false;}$result=$this->gdImage($tmp,$path,$destformat,$s['mime'],$jpgQuality);imagedestroy($img);imagedestroy($tmp);return$result?$path:false;}break;}return false;}protected function imgRotate($path,$degree,$bgcolor='#ffffff',$destformat=null,$jpgQuality=null){if(($s=getimagesize($path))==false||$degree%360===0){return false;}$result=false;if($degree%90===0&&in_array($s[2],array(IMAGETYPE_JPEG,IMAGETYPE_JPEG2000))){$count=($degree/90)%4;$exiftran=array(1=>'-9',2=>'-1',3=>'-2');$jpegtran=array(1=>'90',2=>'180',3=>'270');$quotedPath=escapeshellarg($path);$cmds=array();if($this->procExec(ELFINDER_EXIFTRAN_PATH.' -h')===0){$cmds[]=ELFINDER_EXIFTRAN_PATH.' -i '.$exiftran[$count].' -- '.$quotedPath;}if($this->procExec(ELFINDER_JPEGTRAN_PATH.' -version')===0){$cmds[]=ELFINDER_JPEGTRAN_PATH.' -rotate '.$jpegtran[$count].' -copy all -outfile '.$quotedPath.' -- '.$quotedPath;}foreach($cmds as $cmd){if($this->procExec($cmd)===0){$result=true;break;}}if($result){return $path;}}if(!$jpgQuality){$jpgQuality=$this->options['jpgQuality'];}elFinder::extendTimeLimit(300);switch($this->imgLib){case'imagick':try{$img=new imagick($path);}catch(Exception$e){return false;}if($s[2]===IMAGETYPE_GIF||$s[2]===IMAGETYPE_PNG){$bgcolor='rgba(255,255,255,0)';}if($img->getNumberImages()>1){$img=$img->coalesceImages();do{$img->rotateImage(new ImagickPixel($bgcolor),$degree);}while($img->nextImage());$img->optimizeImageLayers();$result=$img->writeImages($path,true);}else{$img->rotateImage(new ImagickPixel($bgcolor),$degree);$result=$this->imagickImage($img,$path,$destformat,$jpgQuality);}$img->clear();return$result?$path:false;break;case'convert':extract($this->imageMagickConvertPrepare($path,$destformat,$jpgQuality,$s));if($s[2]===IMAGETYPE_GIF||$s[2]===IMAGETYPE_PNG){$bgcolor='rgba(255, 255, 255, 0.0)';}$cmd=sprintf('%s%s%s%s -background "%s" -rotate %d%s -- %s %s',ELFINDER_CONVERT_PATH,$coalesce,$jpgQuality,$interlace,$bgcolor,$degree,$deconstruct,$quotedPath,$quotedDstPath);$result=false;if($this->procExec($cmd)===0){$result=true;}return$result?$path:false;break;case'gd':elFinder::expandMemoryForGD(array($s,$s));$img=$this->gdImageCreate($path,$s['mime']);$degree=360-$degree;$bgNum=-1;$bgIdx=false;if($s[2]===IMAGETYPE_GIF){$bgIdx=imagecolortransparent($img);if($bgIdx!==-1){$c=imagecolorsforindex($img,$bgIdx);$w=imagesx($img);$h=imagesy($img);$newImg=imagecreatetruecolor($w,$h);imagepalettecopy($newImg,$img);$bgNum=imagecolorallocate($newImg,$c['red'],$c['green'],$c['blue']);imagefill($newImg,0,0,$bgNum);imagecolortransparent($newImg,$bgNum);imagecopy($newImg,$img,0,0,0,0,$w,$h);imagedestroy($img);$img=$newImg;$newImg=null;}}elseif($s[2]===IMAGETYPE_PNG){$bgNum=imagecolorallocatealpha($img,255,255,255,127);}if($bgNum===-1){list($r,$g,$b)=sscanf($bgcolor,"#%02x%02x%02x");$bgNum=imagecolorallocate($img,$r,$g,$b);}$tmp=imageRotate($img,$degree,$bgNum);if($bgIdx!==-1){imagecolortransparent($tmp,$bgNum);}$result=$this->gdImage($tmp,$path,$destformat,$s['mime'],$jpgQuality);imageDestroy($img);imageDestroy($tmp);return$result?$path:false;break;}return false;}protected function procExec($command,&$output='',&$return_var=-1,&$error_output=''){return elFinder::procExec($command,$output,$return_var,$error_output);}protected function rmTmb($stat){if($this->tmbPathWritable){if($stat['mime']==='directory'){foreach($this->scandirCE($this->decode($stat['hash']))as$p){elFinder::extendTimeLimit(30);$name=$this->basenameCE($p);$name!='.'&&$name!='..'&&$this->rmTmb($this->stat($p));}}elseif(!empty($stat['tmb'])&&$stat['tmb']!="1"){$tmb=$this->tmbPath.DIRECTORY_SEPARATOR.rawurldecode($stat['tmb']);file_exists($tmb)&&unlink($tmb);clearstatcache();}}}protected function gdImageCreate($path,$mime){switch($mime){case'image/jpeg':return imagecreatefromjpeg($path);case'image/png':return imagecreatefrompng($path);case'image/gif':return imagecreatefromgif($path);case'image/x-ms-bmp':if(!function_exists('imagecreatefrombmp')){include_once dirname(__FILE__).'/libs/GdBmp.php';}return imagecreatefrombmp($path);case'image/xbm':return imagecreatefromxbm($path);case'image/xpm':return imagecreatefromxpm($path);}return false;}protected function gdImage($image,$filename,$destformat,$mime,$jpgQuality=null){if(!$jpgQuality){$jpgQuality=$this->options['jpgQuality'];}if($destformat){switch($destformat){case'jpg':$mime='image/jpeg';break;case'gif':$mime='image/gif';break;case'png':default:$mime='image/png';break;}}switch($mime){case'image/gif':return imagegif($image,$filename);case'image/jpeg':if($this->options['jpgProgressive']){imageinterlace($image,true);}return imagejpeg($image,$filename,$jpgQuality);case'image/wbmp':return imagewbmp($image,$filename);case'image/png':default:return imagepng($image,$filename);}}protected function imagickImage($img,$filename,$destformat,$jpgQuality=null){if(!$jpgQuality){$jpgQuality=$this->options['jpgQuality'];}try{if($destformat){if($destformat==='gif'){$img->setImageFormat('gif');}elseif($destformat==='png'){$img->setImageFormat('png');}elseif($destformat==='jpg'){$img->setImageFormat('jpeg');}}if(strtoupper($img->getImageFormat())==='JPEG'){$img->setImageCompression(imagick::COMPRESSION_JPEG);$img->setImageCompressionQuality($jpgQuality);if($this->options['jpgProgressive']){$img->setInterlaceScheme(Imagick::INTERLACE_PLANE);}try{$orientation=$img->getImageOrientation();}catch(ImagickException$e){$orientation=0;}$img->stripImage();if($orientation){$img->setImageOrientation($orientation);}}$result=$img->writeImage($filename);}catch(Exception$e){$result=false;}return$result;}protected function gdImageBackground($image,$bgcolor){if($bgcolor==='transparent'){imagealphablending($image,false);imagesavealpha($image,true);}else{list($r,$g,$b)=sscanf($bgcolor,"#%02x%02x%02x");$bgcolor1=imagecolorallocate($image,$r,$g,$b);imagefill($image,0,0,$bgcolor1);}}protected function imageMagickConvertPrepare($path,$destformat,$jpgQuality,$imageSize=null,$mime=null){if(is_null($imageSize)){$imageSize=getimagesize($path);}if(is_null($mime)){$mime=$this->mimetype($path);}$srcType=$this->getExtentionByMime($mime,':');$ani=false;if(preg_match('/^(?:gif|png|ico)/',$srcType)){$cmd=ELFINDER_IDENTIFY_PATH.' -- '.escapeshellarg($srcType.$path);if($this->procExec($cmd,$o)===0){$ani=preg_split('/(?:\r\n|\n|\r)/',trim($o));if(count($ani)<2){$ani=false;}}}$coalesce=$index=$interlace='';$deconstruct=' +repage';if($ani&&$destformat!=='png'){if(is_null($destformat)){$coalesce=' -coalesce -repage 0x0';$deconstruct=' +repage -deconstruct -layers optimize';}else if($imageSize){if($srcType==='ico:'){$index='[0]';foreach($ani as$_i=>$_info){if(preg_match('/ (\d+)x(\d+) /',$_info,$m)){if($m[1]==$imageSize[0]&&$m[2]==$imageSize[1]){$index='['.$_i.']';break;}}}}}}else{$index='[0]';}if($imageSize&&($imageSize[2]===IMAGETYPE_JPEG||$imageSize[2]===IMAGETYPE_JPEG2000)){$jpgQuality=' -quality '.$jpgQuality;if($this->options['jpgProgressive']){$interlace=' -interlace Plane';}}else{$jpgQuality='';}$quotedPath=escapeshellarg($srcType.$path.$index);$quotedDstPath=escapeshellarg(($destformat?($destformat.':'):$srcType).$path);return compact('ani','index','coalesce','deconstruct','jpgQuality','quotedPath','quotedDstPath','interlace');}protected function stripos($haystack,$needle,$offset=0){if(function_exists('mb_stripos')){return mb_stripos($haystack,$needle,$offset,'UTF-8');}else if(function_exists('mb_strtolower')&&function_exists('mb_strpos')){return mb_strpos(mb_strtolower($haystack,'UTF-8'),mb_strtolower($needle,'UTF-8'),$offset);}return stripos($haystack,$needle,$offset);}protected function searchMatchName($name,$query,$path){return$this->stripos($name,$query)!==false;}protected function getArchivers($use_cache=true){$sessionKey='archivers';if($use_cache){if(isset($this->options['archivers'])&&is_array($this->options['archivers'])&&$this->options['archivers']){$cache=$this->options['archivers'];}else{$cache=elFinder::$archivers;}if($cache){return$cache;}else{if($cache=$this->session->get($sessionKey,array())){return elFinder::$archivers=$cache;}}}$arcs=array('create'=>array(),'extract'=>array());if($this->procExec('')===0){$this->procExec(ELFINDER_TAR_PATH.' --version',$o,$ctar);if($ctar==0){$arcs['create']['application/x-tar']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-chf','ext'=>'tar');$arcs['extract']['application/x-tar']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-xf','ext'=>'tar','toSpec'=>'-C ','getsize'=>array('argc'=>'-xvf','toSpec'=>'--to-stdout|wc -c','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]*([0-9]+)[^\r\n]*$/s','replace'=>'$1'));unset($o);$this->procExec(ELFINDER_GZIP_PATH.' --version',$o,$c);if($c==0){$arcs['create']['application/x-gzip']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-czhf','ext'=>'tgz');$arcs['extract']['application/x-gzip']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-xzf','ext'=>'tgz','toSpec'=>'-C ','getsize'=>array('argc'=>'-xvf','toSpec'=>'--to-stdout|wc -c','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]*([0-9]+)[^\r\n]*$/s','replace'=>'$1'));}unset($o);$this->procExec(ELFINDER_BZIP2_PATH.' --version',$o,$c);if($c==0){$arcs['create']['application/x-bzip2']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-cjhf','ext'=>'tbz');$arcs['extract']['application/x-bzip2']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-xjf','ext'=>'tbz','toSpec'=>'-C ','getsize'=>array('argc'=>'-xvf','toSpec'=>'--to-stdout|wc -c','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]*([0-9]+)[^\r\n]*$/s','replace'=>'$1'));}unset($o);$this->procExec(ELFINDER_XZ_PATH.' --version',$o,$c);if($c==0){$arcs['create']['application/x-xz']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-cJhf','ext'=>'xz');$arcs['extract']['application/x-xz']=array('cmd'=>ELFINDER_TAR_PATH,'argc'=>'-xJf','ext'=>'xz','toSpec'=>'-C ','getsize'=>array('argc'=>'-xvf','toSpec'=>'--to-stdout|wc -c','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]*([0-9]+)[^\r\n]*$/s','replace'=>'$1'));}}unset($o);$this->procExec(ELFINDER_ZIP_PATH.' -h',$o,$c);if($c==0){$arcs['create']['application/zip']=array('cmd'=>ELFINDER_ZIP_PATH,'argc'=>'-r9 -q','ext'=>'zip');}unset($o);$this->procExec(ELFINDER_UNZIP_PATH.' --help',$o,$c);if($c==0){$arcs['extract']['application/zip']=array('cmd'=>ELFINDER_UNZIP_PATH,'argc'=>'-q','ext'=>'zip','toSpec'=>'-d ','getsize'=>array('argc'=>'-Z -t','regex'=>'/^.+?,\s?([0-9]+).+$/','replace'=>'$1'));}unset($o);$this->procExec(ELFINDER_RAR_PATH.' --version',$o,$c);if($c==0||$c==7){$arcs['create']['application/x-rar']=array('cmd'=>ELFINDER_RAR_PATH,'argc'=>'a -inul','ext'=>'rar');}unset($o);$this->procExec(ELFINDER_UNRAR_PATH,$o,$c);if($c==0||$c==7){$arcs['extract']['application/x-rar']=array('cmd'=>ELFINDER_UNRAR_PATH,'argc'=>'x -y','ext'=>'rar','toSpec'=>'','getsize'=>array('argc'=>'l','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]+[0-9]+[^\r\n0-9]+([0-9]+)[^\r\n]+$/s','replace'=>'$1'));}unset($o);$this->procExec(ELFINDER_7Z_PATH,$o,$c);if($c==0){$arcs['create']['application/x-7z-compressed']=array('cmd'=>ELFINDER_7Z_PATH,'argc'=>'a','ext'=>'7z');$arcs['extract']['application/x-7z-compressed']=array('cmd'=>ELFINDER_7Z_PATH,'argc'=>'x -y','ext'=>'7z','toSpec'=>'-o','getsize'=>array('argc'=>'l','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]+([0-9]+)[^\r\n]+$/s','replace'=>'$1'));if(empty($arcs['create']['application/zip'])){$arcs['create']['application/zip']=array('cmd'=>ELFINDER_7Z_PATH,'argc'=>'a -tzip','ext'=>'zip');}if(empty($arcs['extract']['application/zip'])){$arcs['extract']['application/zip']=array('cmd'=>ELFINDER_7Z_PATH,'argc'=>'x -tzip -y','ext'=>'zip','toSpec'=>'-o','getsize'=>array('argc'=>'l','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]+([0-9]+)[^\r\n]+$/s','replace'=>'$1'));}if(empty($arcs['create']['application/x-tar'])){$arcs['create']['application/x-tar']=array('cmd'=>ELFINDER_7Z_PATH,'argc'=>'a -ttar','ext'=>'tar');}if(empty($arcs['extract']['application/x-tar'])){$arcs['extract']['application/x-tar']=array('cmd'=>ELFINDER_7Z_PATH,'argc'=>'x -ttar -y','ext'=>'tar','toSpec'=>'-o','getsize'=>array('argc'=>'l','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]+([0-9]+)[^\r\n]+$/s','replace'=>'$1'));}if(substr(PHP_OS,0,3)==='WIN'&&empty($arcs['extract']['application/x-rar'])){$arcs['extract']['application/x-rar']=array('cmd'=>ELFINDER_7Z_PATH,'argc'=>'x -trar -y','ext'=>'rar','toSpec'=>'-o','getsize'=>array('argc'=>'l','regex'=>'/^.+(?:\r\n|\n|\r)[^\r\n0-9]+([0-9]+)[^\r\n]+$/s','replace'=>'$1'));}}}if(class_exists('ZipArchive',false)){if(empty($arcs['create']['application/zip'])){$arcs['create']['application/zip']=array('cmd'=>'phpfunction','argc'=>array('self','zipArchiveZip'),'ext'=>'zip');}if(empty($arcs['extract']['application/zip'])){$arcs['extract']['application/zip']=array('cmd'=>'phpfunction','argc'=>array('self','zipArchiveUnzip'),'ext'=>'zip');}}$this->session->set($sessionKey,$arcs);return elFinder::$archivers=$arcs;}protected function getFullPath($path,$base){$separator=$this->separator;$systemroot=$this->systemRoot;$base=(string)$base;if($base[0]===$separator&&substr($base,0,strlen($systemroot))!==$systemroot){$base=$systemroot.substr($base,1);}if($base!==$systemroot){$base=rtrim($base,$separator);}if($path===''||$path==='.'.$separator)return$base;$sepquoted=preg_quote($separator,'#');if(substr($path,0,3)==='..'.$separator){$path=$base.$separator.$path;}$normreg='#('.$sepquoted.')[^'.$sepquoted.']+'.$sepquoted.'\.\.'.$sepquoted.'#';while(preg_match($normreg,$path)){$path=preg_replace($normreg,'$1',$path,1);}if($path!==$systemroot){$path=rtrim($path,$separator);}if($path[0]===$separator||strpos($path,$systemroot)===0){return$path;}$preg_separator='#'.$sepquoted.'#';if(substr($path,0,2)==='.'.$separator||$path[0]!=='.'){$arrn=preg_split($preg_separator,$path,-1,PREG_SPLIT_NO_EMPTY);if($arrn[0]!=='.'){array_unshift($arrn,'.');}$arrn[0]=rtrim($base,$separator);return join($separator,$arrn);}return$path;}public function rmdirRecursive($dir){return self::localRmdirRecursive($dir);}protected function makeArchive($dir,$files,$name,$arc){if($arc['cmd']==='phpfunction'){if(is_callable($arc['argc'])){call_user_func_array($arc['argc'],array($dir,$files,$name));}}else{$cwd=getcwd();if(chdir($dir)){foreach($files as$i=>$file){$files[$i]='.'.DIRECTORY_SEPARATOR.basename($file);}$files=array_map('escapeshellarg',$files);$cmd=$arc['cmd'].' '.$arc['argc'].' '.escapeshellarg($name).' '.implode(' ',$files);$this->procExec($cmd,$o,$c);chdir($cwd);}else{return false;}}$path=$dir.DIRECTORY_SEPARATOR.$name;return file_exists($path)?$path:false;}protected function unpackArchive($path,$arc,$mode=true){if(is_string($mode)){$dir=$mode;$chdir=null;$remove=false;}else{$dir=dirname($path);$chdir=$dir;$remove=$mode;}$dir=realpath($dir);$path=realpath($path);if($arc['cmd']==='phpfunction'){if(is_callable($arc['argc'])){call_user_func_array($arc['argc'],array($path,$dir));}}else{$cwd=getcwd();if(!$chdir||chdir($dir)){if(!empty($arc['getsize'])){$getsize=$arc['getsize'];if(is_array($getsize)&&!empty($getsize['regex'])&&!empty($getsize['replace'])){$cmd=$arc['cmd'].' '.$getsize['argc'].' '.escapeshellarg($path).(!empty($getsize['toSpec'])?(' '.$getsize['toSpec']):'');$this->procExec($cmd,$o,$c);if($o){$size=preg_replace($getsize['regex'],$getsize['replace'],trim($o));$comp=function_exists('bccomp')?'bccomp':'strnatcmp';if(!empty($this->options['maxArcFilesSize'])){if($comp($size,(string)$this->options['maxArcFilesSize'])>0){throw new Exception(elFinder::ERROR_ARC_MAXSIZE);}}}unset($o,$c);}}if($chdir){$cmd=$arc['cmd'].' '.$arc['argc'].' '.escapeshellarg(basename($path));}else{$cmd=$arc['cmd'].' '.$arc['argc'].' '.escapeshellarg($path).' '.$arc['toSpec'].escapeshellarg($dir);}$this->procExec($cmd,$o,$c);$chdir&&chdir($cwd);}}$remove&&unlink($path);}protected function checkExtractItems($path,$checks=null){if(is_null($checks)||!is_array($checks)){$checks=array('symlink','name','writable','mime');}$chkSymlink=in_array('symlink',$checks);$chkName=in_array('name',$checks);$chkWritable=in_array('writable',$checks);$chkMime=in_array('mime',$checks);$res=array('symlinks'=>array(),'names'=>array(),'writables'=>array(),'mimes'=>array(),'rmNames'=>array(),'totalSize'=>0);if(is_dir($path)){$files=self::localScandir($path);}else{$files=array(basename($path));$path=dirname($path);}foreach($files as$name){$p=$path.DIRECTORY_SEPARATOR.$name;$utf8Name=elFinder::$instance->utf8Encode($name);if($name!==$utf8Name){$fsSame=false;if($this->encoding){$_utf8=@iconv($this->encoding,'utf-8//IGNORE',$name);if(@iconv('utf-8',$this->encoding.'//IGNORE',$_utf8)===$name){$fsSame=true;$utf8Name=$_utf8;}else{$_name=$this->convEncIn($utf8Name,true);}}else{$_name=$utf8Name;}if(!$fsSame&&rename($p,$path.DIRECTORY_SEPARATOR.$_name)){$name=$_name;$p=$path.DIRECTORY_SEPARATOR.$name;}}if(!is_readable($p)){self::localRmdirRecursive($p);$res['symlinks'][]=$p;$res['rmNames'][]=$utf8Name;continue;}if($chkSymlink&&is_link($p)){self::localRmdirRecursive($p);$res['symlinks'][]=$p;$res['rmNames'][]=$utf8Name;continue;}$isDir=is_dir($p);if($chkName&&!$this->nameAccepted($name,$isDir)){self::localRmdirRecursive($p);$res['names'][]=$p;$res['rmNames'][]=$utf8Name;continue;}if($chkWritable&&!$this->attr($p,'write',null,$isDir)){self::localRmdirRecursive($p);$res['writables'][]=$p;$res['rmNames'][]=$utf8Name;continue;}if($isDir){$cRes=$this->checkExtractItems($p,$checks);foreach($cRes as$k=>$v){if(is_array($v)){$res[$k]=array_merge($res[$k],$cRes[$k]);}else{$res[$k]+=$cRes[$k];}}}else{if($chkMime&&($mimeByName=elFinderVolumeDriver::mimetypeInternalDetect($name))&&!$this->allowPutMime($mimeByName)){self::localRmdirRecursive($p);$res['mimes'][]=$p;$res['rmNames'][]=$utf8Name;continue;}$res['totalSize']+=(int)sprintf('%u',filesize($p));}}$res['rmNames']=array_unique($res['rmNames']);return$res;}protected static function localScandir($dir){$files=array();if($dh=opendir($dir)){while(false!==($file=readdir($dh))){if($file!=='.'&&$file!=='..'){$files[]=$file;}}closedir($dh);}else{throw new Exception('Can not open local directory.');}return$files;}protected static function localRmdirRecursive($dir){if(is_callable('exec')){$o='';$r=1;if(substr(PHP_OS,0,3)==='WIN'){if(!is_link($dir)&&is_dir($dir)){exec('rd /S /Q '.escapeshellarg($dir),$o,$r);}else{exec('del /F /Q '.escapeshellarg($dir),$o,$r);}}else{exec('rm -rf '.escapeshellarg($dir),$o,$r);}if($r===0){return true;}}if(!is_link($dir)&&is_dir($dir)){chmod($dir,0777);if($handle=opendir($dir)){while(false!==($file=readdir($handle))){if($file==='.'||$file==='..'){continue;}elFinder::extendTimeLimit(30);$path=$dir.DIRECTORY_SEPARATOR.$file;if(!is_link($dir)&&is_dir($path)){self::localRmdirRecursive($path);}else{chmod($path,0666);unlink($path);}}closedir($handle);}return rmdir($dir);}else{chmod($dir,0666);return unlink($dir);}}protected static function localMoveRecursive($src,$target,$overWrite=true,$copyJoin=true){$res=false;if(!file_exists($target)){return rename($src,$target);}if(!$copyJoin||!is_dir($target)){if($overWrite){if(is_dir($target)){$del=self::localRmdirRecursive($target);}else{$del=unlink($target);}if($del){return rename($src,$target);}}}else{foreach(self::localScandir($src)as$item){$res|=self::localMoveRecursive($src.DIRECTORY_SEPARATOR.$item,$target.DIRECTORY_SEPARATOR.$item,$overWrite,$copyJoin);}}return(bool)$res;}protected static function zipArchiveZip($dir,$files,$zipPath){try{if($start=is_string($zipPath)){$zip=new ZipArchive();if($zip->open($dir.DIRECTORY_SEPARATOR.$zipPath,ZipArchive::CREATE)!==true){$zip=false;}}else{$zip=$zipPath;}if($zip){foreach($files as $file){$path=$dir.DIRECTORY_SEPARATOR.$file;if(is_dir($path)){$zip->addEmptyDir($file);$_files=array();if($handle=opendir($path)){while(false!==($entry=readdir($handle))){if($entry!=="."&&$entry!==".."){$_files[]=$file.DIRECTORY_SEPARATOR.$entry;}}closedir($handle);}if($_files){self::zipArchiveZip($dir,$_files,$zip);}}else{$zip->addFile($path,$file);}}$start&&$zip->close();}}catch(Exception $e){return false;}return true;}protected static function zipArchiveUnzip($zipPath,$toDir){try{$zip=new ZipArchive();if($zip->open($zipPath)===true){$num=$zip->numFiles;$size=0;$maxSize=empty(self::$maxArcFilesSize)?'':(string)self::$maxArcFilesSize;$comp=function_exists('bccomp')?'bccomp':'strnatcmp';for($i=0;$i<$num;$i++){$stat=$zip->statIndex($i);$size+=$stat['size'];if(strpos((string)$size,'E')!==false){throw new Exception(elFinder::ERROR_ARC_MAXSIZE);}if(!$maxSize){if($comp($size,$maxSize)>0){throw new Exception(elFinder::ERROR_ARC_MAXSIZE);}}}$zip->extractTo($toDir);$zip->close();}}catch(Exception $e){throw $e;}return true;}protected static function localFindSymlinks($path){if(is_link($path)){return true;}if(is_dir($path)){foreach(self::localScandir($path)as $name){$p=$path.DIRECTORY_SEPARATOR.$name;if(is_link($p)){return true;}if(is_dir($p)&&self::localFindSymlinks($p)){return true;}}}return false;}abstract protected function _dirname($path);abstract protected function _basename($path);abstract protected function _joinPath($dir,$name);abstract protected function _normpath($path);abstract protected function _relpath($path);abstract protected function _abspath($path);abstract protected function _path($path);abstract protected function _inpath($path,$parent);abstract protected function _stat($path);abstract protected function _subdirs($path);abstract protected function _dimensions($path,$mime);abstract protected function _scandir($path);abstract protected function _fopen($path,$mode="rb");abstract protected function _fclose($fp,$path='');abstract protected function _mkdir($path,$name);abstract protected function _mkfile($path,$name);abstract protected function _symlink($source,$targetDir,$name);abstract protected function _copy($source,$targetDir,$name);abstract protected function _move($source,$targetDir,$name);abstract protected function _unlink($path);abstract protected function _rmdir($path);abstract protected function _save($fp,$dir,$name,$stat);abstract protected function _getContents($path);abstract protected function _filePutContents($path,$content);abstract protected function _extract($path,$arc);abstract protected function _archive($dir,$files,$name,$arc);abstract protected function _checkArchivers();abstract protected function _chmod($path,$mode);}
